{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/cart-page/cart-page.component.css","webpack:///./src/app/components/cart-page/cart-page.component.html","webpack:///./src/app/components/cart-page/cart-page.component.ts","webpack:///./src/app/components/category-page/category-page.component.css","webpack:///./src/app/components/category-page/category-page.component.html","webpack:///./src/app/components/category-page/category-page.component.ts","webpack:///./src/app/components/category-sidebar/category-sidebar.component.css","webpack:///./src/app/components/category-sidebar/category-sidebar.component.html","webpack:///./src/app/components/category-sidebar/category-sidebar.component.ts","webpack:///./src/app/components/checkout-page/checkout-page.component.css","webpack:///./src/app/components/checkout-page/checkout-page.component.html","webpack:///./src/app/components/checkout-page/checkout-page.component.ts","webpack:///./src/app/components/discount-carousel/discount-carousel.component.css","webpack:///./src/app/components/discount-carousel/discount-carousel.component.html","webpack:///./src/app/components/discount-carousel/discount-carousel.component.ts","webpack:///./src/app/components/index-page/index-page.component.css","webpack:///./src/app/components/index-page/index-page.component.html","webpack:///./src/app/components/index-page/index-page.component.ts","webpack:///./src/app/components/login-page/login-page.component.css","webpack:///./src/app/components/login-page/login-page.component.html","webpack:///./src/app/components/login-page/login-page.component.ts","webpack:///./src/app/components/my-footer/my-footer.component.css","webpack:///./src/app/components/my-footer/my-footer.component.html","webpack:///./src/app/components/my-footer/my-footer.component.ts","webpack:///./src/app/components/navigation-bar/navigation-bar.component.css","webpack:///./src/app/components/navigation-bar/navigation-bar.component.html","webpack:///./src/app/components/navigation-bar/navigation-bar.component.ts","webpack:///./src/app/components/order/order.component.css","webpack:///./src/app/components/order/order.component.html","webpack:///./src/app/components/order/order.component.ts","webpack:///./src/app/components/product-page/product-page.component.css","webpack:///./src/app/components/product-page/product-page.component.html","webpack:///./src/app/components/product-page/product-page.component.ts","webpack:///./src/app/components/product/product.component.css","webpack:///./src/app/components/product/product.component.html","webpack:///./src/app/components/product/product.component.ts","webpack:///./src/app/components/products-carousel/products-carousel.component.css","webpack:///./src/app/components/products-carousel/products-carousel.component.html","webpack:///./src/app/components/products-carousel/products-carousel.component.ts","webpack:///./src/app/components/rating/rating.component.css","webpack:///./src/app/components/rating/rating.component.html","webpack:///./src/app/components/rating/rating.component.ts","webpack:///./src/app/components/register-page/register-page.component.css","webpack:///./src/app/components/register-page/register-page.component.html","webpack:///./src/app/components/register-page/register-page.component.ts","webpack:///./src/app/components/shop-services/shop-services.component.css","webpack:///./src/app/components/shop-services/shop-services.component.html","webpack:///./src/app/components/shop-services/shop-services.component.ts","webpack:///./src/app/interceptors/authenticationStatusChangeInterceptor.ts","webpack:///./src/app/models/product.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/cart.service.ts","webpack:///./src/app/services/category.service.ts","webpack:///./src/app/services/checkout.service.ts","webpack:///./src/app/services/deal.service.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/app/services/register.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CartPageComponent } from './components/cart-page/cart-page.component';\r\nimport { CategoryPageComponent } from './components/category-page/category-page.component';\r\nimport { LoginPageComponent } from './components/login-page/login-page.component';\r\nimport { CheckoutPageComponent } from './components/checkout-page/checkout-page.component';\r\nimport { ProductPageComponent } from './components/product-page/product-page.component';\r\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\r\nimport { IndexPageComponent } from './components/index-page/index-page.component';\r\nimport { OrderComponent } from './components/order/order.component';\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', \r\n    component: IndexPageComponent \r\n  },\r\n  {\r\n    path: 'login',\r\n    component:LoginPageComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component:RegisterPageComponent\r\n  },\r\n  {\r\n    path: 'cart',\r\n    component:CartPageComponent\r\n  },\r\n  {\r\n    path: 'checkout',\r\n    component:CheckoutPageComponent\r\n  }\r\n  ,\r\n  {\r\n    path: 'category/:name',\r\n    component:CategoryPageComponent\r\n  },\r\n  {\r\n    path: 'order/:id',\r\n    component:OrderComponent\r\n  },\r\n  {\r\n    path: 'product/:name',\r\n    component:ProductPageComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [ RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { CartProduct } from './models/cartProduct';\r\nimport { CartService } from './services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  \r\n  title = 'frontend';\r\n\r\n  constructor( private authenticationService : AuthenticationService, private cartService : CartService) { }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.authenticationService.isAuthenticated){\r\n      this.authenticationService.getAnonymousSession();\r\n      this.cartService.createAnonymousUserCart();\r\n    } \r\n  }\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { ShopServicesComponent } from './components/shop-services/shop-services.component';\r\nimport { DiscountCarouselComponent } from './components/discount-carousel/discount-carousel.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MyFooterComponent } from './components/my-footer/my-footer.component';\r\nimport { NavigationBarComponent } from './components/navigation-bar/navigation-bar.component';\r\nimport { CartPageComponent } from './components/cart-page/cart-page.component';\r\nimport { CategoryPageComponent } from './components/category-page/category-page.component';\r\nimport { CheckoutPageComponent } from './components/checkout-page/checkout-page.component';\r\nimport { LoginPageComponent } from './components/login-page/login-page.component';\r\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\r\nimport { ProductPageComponent } from './components/product-page/product-page.component';\r\nimport { IndexPageComponent } from './components/index-page/index-page.component';\r\nimport { ProductComponent } from './components/product/product.component';\r\nimport { ProductsCarouselComponent } from './components/products-carousel/products-carousel.component';\r\nimport { CategorySidebarComponent } from './components/category-sidebar/category-sidebar.component';\r\nimport { RatingComponent } from './components/rating/rating.component';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { AuthenticationStatusChangeInterceptor } from './interceptors/authenticationStatusChangeInterceptor';\r\nimport { OrderComponent } from './components/order/order.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ShopServicesComponent,\r\n    DiscountCarouselComponent,\r\n    MyFooterComponent,\r\n    NavigationBarComponent,\r\n    CartPageComponent,\r\n    CategoryPageComponent,\r\n    CheckoutPageComponent,\r\n    LoginPageComponent,\r\n    RegisterPageComponent,\r\n    ProductPageComponent,\r\n    IndexPageComponent,\r\n    ProductComponent,\r\n    ProductsCarouselComponent,\r\n    CategorySidebarComponent,\r\n    RatingComponent,\r\n    OrderComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    CookieService, \r\n\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthenticationStatusChangeInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"/* --- Breadcrumbs --- */\\r\\n\\r\\n.breadcrumbs{\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 16px;\\r\\n}\\r\\n\\r\\n/* --- Shopping Cart --- */\\r\\n\\r\\nsection.cart{\\r\\n    margin-top: 16px;\\r\\n    margin-bottom: 48px;\\r\\n  }\\r\\n\\r\\nsection.cart .table-content{\\r\\n    margin-top: 64px;\\r\\n  }\\r\\n\\r\\nsection.cart .table-responsive{\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\nsection.cart table tr td{\\r\\n    padding-top: 1.25rem;\\r\\n    padding-bottom: 1.25rem;\\r\\n  }\\r\\n\\r\\nsection.cart table tr, section.cart table tr{\\r\\n    border-left: 1px solid #dee2e6;\\r\\n    border-right: 1px solid #dee2e6;\\r\\n  }\\r\\n\\r\\ninput::-webkit-outer-spin-button, input::-webkit-inner-spin-button {\\r\\n    -webkit-appearance: none;\\r\\n  }\\r\\n\\r\\nsection.cart table td input.form-control{\\r\\n    width: 75%;\\r\\n    text-align: center;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n  }\\r\\n\\r\\n.spinner{\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    z-index: 999;\\r\\n  }\\r\\n\\r\\nsection.cart table td a.brand{\\r\\n    display: block;\\r\\n    font-size: 16px;\\r\\n    font-weight: 300;\\r\\n    margin-bottom:8px;\\r\\n  }\\r\\n\\r\\nsection.cart table td a.brand:hover, section.cart table td a.name:hover{\\r\\n    -webkit-text-decoration-style: none;\\r\\n            text-decoration-style: none;\\r\\n  }\\r\\n\\r\\nsection.cart table td a.name{\\r\\n    display: block;\\r\\n    font-size: 18px;\\r\\n    font-weight: 400;\\r\\n    margin-bottom:8px;\\r\\n  }\\r\\n\\r\\nsection.cart table td a.delete{\\r\\n    font-size:14px;\\r\\n    font-weight: 400;\\r\\n    display: inline-block;\\r\\n    margin-top: 16px;\\r\\n  }\\r\\n\\r\\nsection.cart a:not([href]):not([tabindex]):hover{\\r\\n    color:red;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\nsection.cart a:not([href]):not([tabindex]){\\r\\n    color:red;\\r\\n  }\"","module.exports = \"<navigation-bar></navigation-bar>\\r\\n\\r\\n<!-- Breadcrumbs -->\\r\\n<div class=\\\"breadcrumbs\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <a routerLink=\\\"/\\\"><i class=\\\"fas fa-home mr-1\\\"></i></a>/ Καλάθι\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Shopping Cart -->\\r\\n<section  class=\\\"cart\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <h1 class=\\\"text-center\\\">Καλάθι</h1>\\r\\n      <div *ngIf=\\\"!isUserCartEmpty()\\\" class=\\\"row table-content\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                      <div class=\\\"table-responsive\\\">\\r\\n                          <table class=\\\"table\\\">\\r\\n                              <thead class=\\\"text-center\\\">\\r\\n                                  <th>Εικόνα</th>\\r\\n                                  <th>Προιόν</th>\\r\\n                                  <th>Ποσότητα</th>\\r\\n                                  <th>Τιμή</th>\\r\\n                                  <th>Σύνολο</th>\\r\\n                              </thead>\\r\\n      \\r\\n                              <tbody>\\r\\n                                  <tr *ngFor=\\\"let product of cartProducts\\\">\\r\\n                                      <td><img class=\\\"d-block mx-auto\\\" src=\\\"{{product.imageUrl}}\\\" /></td>\\r\\n                                      <td class=\\\"text-left\\\">\\r\\n                                          <a routerLink=\\\"/product/{{product.name}}\\\" class=\\\"brand\\\">{{product.brand}}</a>\\r\\n                                          <a routerLink=\\\"/product/{{product.name}}\\\" class=\\\"name\\\">{{product.name}}</a>\\r\\n                                          <a class=\\\"delete\\\" (click)=\\\"deleteProduct(product)\\\" >Αφαίρεση</a>\\r\\n                                     </td>\\r\\n                                      <td>\\r\\n                                          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"product.quantity\\\" (input)=\\\"updateCart(product)\\\">\\r\\n                                      </td>\\r\\n                                      <td class=\\\"text-center\\\">{{product.price}}€</td>\\r\\n                                      <td class=\\\"text-center\\\">{{product.price * product.quantity}}€</td>\\r\\n                                  </tr>\\r\\n      \\r\\n                                  <tr>\\r\\n                                      <td></td>\\r\\n                                      <td></td>\\r\\n                                      <td></td>\\r\\n                                      <td class=\\\"text-center\\\">Σύνολο</td>\\r\\n                                      <td class=\\\"text-center\\\">{{getTotalCartPrice()}}€</td>\\r\\n                                  </tr>\\r\\n                              </tbody>\\r\\n                          </table>\\r\\n                      </div>\\r\\n              </div>\\r\\n              \\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"isUserCartEmpty()\\\" class=\\\"mt-4\\\"><p>Το καλάθι σου είναι άδειο!.</p></div>\\r\\n\\r\\n      <i *ngIf=\\\"!isUpdateProductRequestDone\\\" class=\\\"fas fa-sync-alt fa-2x fa-spin spinner\\\" ></i>\\r\\n      \\r\\n      <div *ngIf=\\\"!isUserCartEmpty()\\\" class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12 col-md-6\\\">\\r\\n              <button class=\\\"btn btn-block btn-light\\\" (click)=\\\"navigateToIndex()\\\">Συνέχισε τις αγορές</button>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-sm-12 col-md-6\\\">\\r\\n              <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"navigateToCheckout()\\\">Checkout</button>\\r\\n          </div>\\r\\n      </div>\\r\\n      \\r\\n  </div>  \\r\\n</section>\\r\\n\\r\\n<my-footer></my-footer>\\r\\n\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { CartProduct } from 'src/app/models/cartProduct';\r\nimport { Subscription } from 'rxjs';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { NavigationBarComponent } from '../navigation-bar/navigation-bar.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'cart-page',\r\n  templateUrl: './cart-page.component.html',\r\n  styleUrls: ['./cart-page.component.css']\r\n})\r\nexport class CartPageComponent implements OnInit, OnDestroy {\r\n\r\n  cartProducts : CartProduct[];\r\n  httpSubscription : Subscription;\r\n\r\n  private isUpdateProductRequestDone = true;\r\n  private isUserLoggedIn : boolean = false;\r\n  private isLocalStorageEmpty : boolean = localStorage.length === 0;  \r\n  @ViewChild(NavigationBarComponent) navigationBar : NavigationBarComponent;\r\n\r\n  constructor(private router : Router, private authenticationService : AuthenticationService, private cartService : CartService) { }\r\n\r\n  ngOnInit() {\r\n    this.cartProducts = [];\r\n    this.isUserLoggedIn = this.authenticationService.isAuthenticated;\r\n    if(this.isUserLoggedIn && !this.isLocalStorageEmpty){\r\n      let userId = localStorage.getItem('userid');\r\n      this.httpSubscription = this.cartService.getCartProducts(userId).subscribe(cartProducts => this.cartProducts = cartProducts);\r\n    }else if(!this.isUserLoggedIn && this.cartService.doesAnonymousUserCartExist){\r\n      this.cartProducts = this.cartService.getAnonymousUserCart();\r\n    }\r\n    \r\n  }\r\n\r\n  isUserCartEmpty() : boolean{\r\n    return this.cartProducts.length === 0;\r\n  }\r\n\r\n  getTotalCartPrice() : number{\r\n    let totalPrice = 0;\r\n    if(this.cartProducts.length !== 0){\r\n      this.cartProducts.forEach(product => {\r\n        totalPrice += product.price * product.quantity\r\n      });\r\n    }\r\n    return totalPrice;\r\n  }\r\n\r\n  deleteProduct(product : CartProduct) : void{\r\n    if(this.isUserLoggedIn){\r\n      this.cartService.deleteCartProduct(product.userid, product.productid).toPromise()\r\n                    .then(response => {\r\n                      this.navigationBar.setCartCount(this.navigationBar.userId);\r\n                      this.removeProductFromArray(product);\r\n                    })\r\n                    .catch(errorResponse => console.log(errorResponse));\r\n    }else{\r\n      this.removeProductFromArray(product);\r\n      this.cartService.updateAnonymousUserCart(this.cartProducts);\r\n      this.navigationBar.setAnonymousUserCartCount();\r\n    }\r\n    \r\n  }\r\n\r\n  removeProductFromArray(product : CartProduct) : void{\r\n    let index = this.cartProducts.indexOf(product);\r\n    this.cartProducts.splice(index, 1);\r\n  }\r\n\r\n  updateCart(product : CartProduct){\r\n    if(product.quantity !== null){\r\n\r\n      console.log('updating cart');\r\n\r\n      if(this.isUserLoggedIn){\r\n        this.isUpdateProductRequestDone = false;\r\n        this.cartService.updateCartProduct(product).toPromise()\r\n                      .then(response => {\r\n                        this.navigationBar.setCartCount(this.navigationBar.userId);\r\n                        this.isUpdateProductRequestDone =  true;\r\n                      })\r\n                      .catch(erroResponse => this.isUpdateProductRequestDone = true);\r\n      }else{\r\n        this.cartService.updateUserCartProduct(product);\r\n        this.cartProducts = this.cartService.getAnonymousUserCart();\r\n        this.navigationBar.setAnonymousUserCartCount();\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  navigateToIndex() : void{\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  navigateToCheckout() : void{\r\n    this.router.navigate(['/checkout']);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if(this.httpSubscription !== undefined)this.httpSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"/* --- Breadcrumbs --- */\\r\\n\\r\\n.breadcrumbs{\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 16px;\\r\\n}\\r\\n\\r\\nsection h1{\\r\\n    text-align: center;\\r\\n    margin-bottom: 48px;\\r\\n  }\\r\\n\\r\\n.sidebar{\\r\\n    border-right: 1px solid #333333;\\r\\n}\\r\\n\\r\\n.category-content{\\r\\n    margin-bottom:48px;\\r\\n}\\r\\n\\r\\n.product-content{\\r\\n    margin-bottom:48px;\\r\\n}\\r\\n\\r\\nul{\\r\\n    position: absolute;\\r\\n    bottom: 0px;\\r\\n    left : 50%;\\r\\n}\\r\\n\\r\\n.page-link{\\r\\n    color:#04BF00;\\r\\n    background : #fff;\\r\\n    border-color : #dee2e6;\\r\\n}\\r\\n\\r\\n.page-link:focus{\\r\\n    box-shadow: none;\\r\\n}\\r\\n\\r\\n.page-item.active .page-link{\\r\\n    color:white;\\r\\n    background : #04BF00;\\r\\n    border-color : #04BF00;\\r\\n}\\r\\n\\r\\n.spinner{\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    z-index: 999;\\r\\n  }\"","module.exports = \"<navigation-bar></navigation-bar>\\r\\n\\r\\n<!-- Breadcrumbs -->\\r\\n<div class=\\\"breadcrumbs\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <a routerLink=\\\"/\\\"><i class=\\\"fas fa-home mr-1\\\"></i></a>/ {{categoryTitle}}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Content -->\\r\\n<section class=\\\"container\\\">\\r\\n  <h1>{{categoryTitle}}</h1>\\r\\n  <div class=\\\"row category-content\\\">\\r\\n    <div class=\\\"col-md-3 sidebar\\\">\\r\\n        <category-sidebar [category] = \\\"category\\\"></category-sidebar>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <div class=\\\"mb-5\\\">\\r\\n          <span class=\\\"mx-4\\\">Προιόντα {{productNumberLow}}-{{productNumberHigh}} από {{productPage?.totalElements}}</span>\\r\\n          <span>Κατάταξη ως προς:</span>\\r\\n          <select class=\\\"ml-2\\\" [(ngModel)]=\\\"selectedValue\\\" (ngModelChange)=\\\"onOrderChange($event)\\\">\\r\\n            <option *ngFor=\\\"let option of selectOptions;\\\" [value]=\\\"option.value\\\">{{option.name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row product-content\\\">\\r\\n            <div class=\\\"col-sm-6 col-md-6 col-lg-4 mb-5\\\" *ngFor=\\\"let productItem of products\\\">\\r\\n                 <product-item [product] = \\\"productItem\\\"></product-item>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <ul class=\\\"pagination\\\">\\r\\n            <li *ngFor=\\\"let page of pageNumbers; let i = index;\\\" [ngClass] = \\\" i == currentPage ? 'page-item active' : 'page-item'\\\">\\r\\n              <a class=\\\"page-link\\\" routerLink=\\\"/category/{{category}}\\\" [queryParams]=\\\"{ page: i , brand : brandParameters, range : rangeParameters}\\\">{{page}}</a>\\r\\n            </li>\\r\\n        </ul> \\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<i *ngIf=\\\"!isGetCategoryProductsRequestDone\\\" class=\\\"fas fa-sync-alt fa-2x fa-spin spinner\\\" ></i>\\r\\n\\r\\n<my-footer></my-footer>\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { Product } from 'src/app/models/product';\r\nimport { ProductPage } from 'src/app/models/productPage';\r\nimport { CategorySidebarComponent } from '../category-sidebar/category-sidebar.component';\r\n\r\n@Component({\r\n  selector: 'category-page',\r\n  templateUrl: './category-page.component.html',\r\n  styleUrls: ['./category-page.component.css']\r\n})\r\nexport class CategoryPageComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(CategorySidebarComponent) sidebar : CategorySidebarComponent;\r\n  category : string;\r\n  categoryTitle : string;\r\n  currentPage : number = 0;\r\n  products : Product[];\r\n  productPage : ProductPage;\r\n  pageNumbers : number[];\r\n  brandParameters = [] as string[];\r\n  rangeParameters : string[] = [];\r\n  isGetCategoryProductsRequestDone : boolean = true;\r\n\r\n  productNumberLow : number ;\r\n  productNumberHigh : number;\r\n\r\n  paramRouteSubscription : Subscription;\r\n  queryParamRouteSubscription : Subscription;\r\n  httpSubscription : Subscription;\r\n  httpSubscription2 : Subscription;\r\n\r\n  greekCategories = {\r\n    vitamins : 'Βιταμίνες',\r\n    minerals : 'Μέταλλα',\r\n    fishoils : 'Ιχθυέλαια',\r\n    superfoods : 'Υπερτροφές',\r\n    fragrances : 'Αρώματα',\r\n    shampoos : 'Σαμπουάν'\r\n  };\r\n\r\n  selectOptions = [\r\n    {\r\n      name : 'Αύξουσα Τιμή',\r\n      value : 'asc'\r\n    },\r\n    {\r\n      name : 'Φθίνουσα Τιμή',\r\n      value : 'desc'\r\n    }\r\n  ];\r\n\r\n  private selectedValue : string;\r\n\r\n  constructor(private route : ActivatedRoute, private categoryService : CategoryService) { }\r\n\r\n  ngOnInit() {\r\n    this.paramRouteSubscription = this.route.params.subscribe(params => {\r\n      this.isGetCategoryProductsRequestDone = false;\r\n      this.brandParameters= [];\r\n      this.selectedValue = 'asc';\r\n      this.category = params['name'];\r\n      this.currentPage =  this.route.snapshot.queryParams['page'];\r\n      this.categoryTitle = params['name'] === 'fish-oils' ? this.greekCategories['fishoils'] : this.greekCategories[params['name']];\r\n      this.httpSubscription = this.categoryService.getCategoryProductsPage(this.category, this.currentPage, this.selectedValue, this.brandParameters, this.rangeParameters).subscribe(productPage => {\r\n        this.pageNumbers = [];\r\n        this.productPage = productPage;\r\n        this.products = productPage.content;\r\n        this.setProductRange(this.productPage.number, this.productPage.numberOfElements);\r\n        this.isGetCategoryProductsRequestDone = true;  \r\n        this.initializePageNumberArray(this.pageNumbers, this.productPage.totalPages);\r\n      }, \r\n      error => {\r\n        console.log(error);\r\n        this.isGetCategoryProductsRequestDone = true;\r\n      });\r\n    });\r\n\r\n    this.queryParamRouteSubscription =  this.route.queryParams.subscribe(queryParams => {\r\n      this.isGetCategoryProductsRequestDone = false;\r\n      let oldCategory = this.category;\r\n      let oldPage = this.currentPage;\r\n      this.currentPage = queryParams['page'];\r\n\r\n      let oldBrandParametersLength = this.brandParameters.length;\r\n      let newBrandParametersLength;\r\n      if( queryParams['brand'] !== undefined){\r\n        this.brandParameters = queryParams['brand'];\r\n        newBrandParametersLength = this.brandParameters.length;\r\n      } \r\n      let didBrandParametersChange = false;\r\n\r\n      if(newBrandParametersLength !== undefined){\r\n        didBrandParametersChange = oldBrandParametersLength !== newBrandParametersLength  ? true : false;\r\n      }\r\n\r\n      let oldRangeParametersLength = this.rangeParameters.length;\r\n      let newRangeParametersLength;\r\n      if( queryParams['range'] !== undefined){\r\n        this.rangeParameters = queryParams['range'];\r\n        newRangeParametersLength = this.rangeParameters.length;\r\n      } \r\n      let didRangeParametersChange = false;\r\n\r\n      if(newRangeParametersLength !== undefined){\r\n        didRangeParametersChange = oldRangeParametersLength !== newRangeParametersLength  ? true : false;\r\n      }\r\n      \r\n      this.category = this.route.snapshot.params['name'];\r\n      this.categoryTitle = this.category === 'fish-oils' ? this.greekCategories['fishoils'] : this.greekCategories[this.category];\r\n      if( oldCategory === this.category && (this.currentPage != oldPage || didBrandParametersChange || didRangeParametersChange) ){\r\n        if( (didBrandParametersChange || didRangeParametersChange) && (this.brandParameters.length === 0 && this.rangeParameters.length === 0)){\r\n          this.sidebar.deselectCheckboxes();\r\n        }\r\n\r\n        this.httpSubscription2 = this.categoryService.getCategoryProductsPage(this.category, this.currentPage, this.selectedValue, this.brandParameters, this.rangeParameters).subscribe(productPage => {\r\n          this.pageNumbers = [];\r\n          this.productPage = productPage;\r\n          this.products = productPage.content; \r\n          this.setProductRange(this.productPage.number, this.productPage.numberOfElements);\r\n          this.isGetCategoryProductsRequestDone = true;\r\n          this.initializePageNumberArray(this.pageNumbers, this.productPage.totalPages);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.isGetCategoryProductsRequestDone = true;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onOrderChange(order : any){\r\n    this.isGetCategoryProductsRequestDone = false;\r\n     this.categoryService.getCategoryProductsPage(this.category, this.currentPage, order, this.brandParameters, this.rangeParameters).toPromise()\r\n                         .then(productPage => {\r\n                            this.productPage = productPage;\r\n                            this.products = productPage.content; \r\n                            this.isGetCategoryProductsRequestDone = true;\r\n                         })\r\n                         .catch(errorResponse => {\r\n                           console.log(errorResponse);\r\n                           this.isGetCategoryProductsRequestDone = true;\r\n                          });\r\n  }\r\n\r\n  initializePageNumberArray(pageNumbers : number[], pageCount : number) : void{\r\n    for(let i=0; i<pageCount; i++){\r\n      pageNumbers[i] = i + 1;\r\n    }\r\n  }\r\n\r\n  setProductRange(pageNumber : number, pageNumberOfElements : number) : void{\r\n    this.productNumberLow = pageNumber * 6 + 1;\r\n    this.productNumberHigh = this.productNumberLow + pageNumberOfElements - 1;\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.paramRouteSubscription.unsubscribe();\r\n    this.queryParamRouteSubscription.unsubscribe();\r\n    if(this.httpSubscription !== undefined)this.httpSubscription.unsubscribe();\r\n    if(this.httpSubscription2 !== undefined) this.httpSubscription2.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"ul{\\r\\n    margin-top: 8px;\\r\\n    margin-bottom: 48px;\\r\\n}\\r\\n\\r\\nspan{\\r\\n    margin-left: 8px;\\r\\n}\"","module.exports = \"<h4 >Εταιρίες</h4>\\r\\n<ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let currentBrand of numberOfProductsPerBrand\\\">\\r\\n        <input type=\\\"checkbox\\\" class=\\\"mr-2\\\" value=\\\"{{currentBrand?.brand}}\\\" [(ngModel)]=\\\"currentBrand.checked\\\" (change)=\\\"onSelectedBrand()\\\">{{currentBrand?.brand}}\\r\\n        <span>({{currentBrand?.number}})</span>\\r\\n      </li>\\r\\n</ul>\\r\\n\\r\\n<h4>Τιμή</h4>\\r\\n<ul class=\\\"list-group\\\">\\r\\n    <li class=\\\"list-group-item\\\"  *ngFor=\\\"let priceRange of numberOfProductsPerPriceRange\\\">\\r\\n      <input type=\\\"checkbox\\\" class=\\\"mr-2\\\" value=\\\"{{priceRange?.rangeId}}\\\" [(ngModel)]=\\\"priceRange.checked\\\" (change)=\\\"onSelectedPriceRange()\\\" [disabled] = \\\"priceRange?.number === 0\\\">{{priceRange?.min}}€ - {{priceRange?.max}}€\\r\\n      <span>({{priceRange?.number}})</span>\\r\\n    </li>\\r\\n</ul>\\r\\n\\r\\n<!-- <h4>Αξιολογήσεις</h4>\\r\\n<ul class=\\\"list-group\\\">\\r\\n  <li *ngFor=\\\"let currentRating of ratings\\\" class=\\\"list-group-item\\\">\\r\\n      <rating [uncheckedStars] = \\\"currentRating.uncheckedStars\\\"></rating>\\r\\n  </li>\\r\\n</ul>\\r\\n-->\\r\\n\"","import { Component, OnInit, OnDestroy, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Brand } from 'src/app/models/brand';\r\nimport { Rating } from 'src/app/models/rating';\r\nimport { PriceRange } from 'src/app/models/priceRange';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { ProductsPerBrand } from 'src/app/models/productsPerBrand';\r\nimport { ProductsPerPriceRange } from 'src/app/models/productsPerPriceRange';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'category-sidebar',\r\n  templateUrl: './category-sidebar.component.html',\r\n  styleUrls: ['./category-sidebar.component.css']\r\n})\r\nexport class CategorySidebarComponent implements OnInit, OnDestroy, OnChanges {\r\n  \r\n\r\n  @Input() category : string;\r\n  categoryBrands : Brand[];\r\n  numberOfProductsPerBrand: ProductsPerBrand[];\r\n  numberOfProductsPerPriceRange: ProductsPerPriceRange[];\r\n  priceRanges : PriceRange[];\r\n  ratings : Rating[];\r\n  selectedBrands : string[] = [];\r\n  selectedPriceRanges : number[] = [];\r\n\r\n  httpSubscription : Subscription;\r\n  httpSubscription2 : Subscription;\r\n\r\n  constructor(private categoryService : CategoryService, private router : Router) { }\r\n\r\n  ngOnInit() {                            \r\n    this.initializeRatings();\r\n  }\r\n\r\n  ngOnChanges(changes : SimpleChanges): void {\r\n    this.getBrands();\r\n    this.getPriceRanges(); \r\n    this.selectedBrands = [];\r\n    this.selectedPriceRanges = [];\r\n  }\r\n\r\n  deselectCheckboxes() : void{\r\n    this.numberOfProductsPerBrand.forEach(brandOption => brandOption.checked = false);\r\n    this.numberOfProductsPerPriceRange.forEach(priceRangeOption => priceRangeOption.checked = false);\r\n  }\r\n\r\n  getBrands() : void{\r\n    this.numberOfProductsPerBrand = [];\r\n    this.categoryService.getCategoryBrands(this.category).subscribe(brands => {\r\n      this.categoryBrands = brands;\r\n      this.categoryService.getCategoryProductsNumberByBrand(this.category, this.categoryBrands).subscribe(item => {\r\n        this.numberOfProductsPerBrand.push(item);\r\n        //this.numberOfProductsPerBrand.sort(function(a,b) {return (a.brand > b.brand) ? 1 : ( (b.brand > a.brand) ? 1 : 0);});\r\n      });\r\n    });\r\n  }\r\n\r\n  getPriceRanges() : void{\r\n    this.initializePriceRanges();\r\n    this.numberOfProductsPerPriceRange = [];\r\n    this.httpSubscription =  this.categoryService.getCategoryProductsNumberByPriceRange(this.category, this.priceRanges).subscribe(range => {\r\n      this.numberOfProductsPerPriceRange.push(range);\r\n      //this.numberOfProductsPerPriceRange.sort(function(a,b) {return (a.rangeId > b.rangeId) ? 1 : ( (b.rangeId > a.rangeId) ? 1 : 0);});\r\n    });\r\n  }\r\n\r\n  initializeRatings() : void{\r\n    this.ratings = [];\r\n    for(let i=0; i<5; i++){\r\n      let rating = {} as Rating;\r\n      rating.uncheckedStars = i;\r\n      this.ratings.push(rating);\r\n    }\r\n  }\r\n\r\n  initializePriceRanges() : void{\r\n    this.priceRanges = [];\r\n    let zeroToTen= {} as PriceRange;\r\n    let tenToTwenty= {} as PriceRange;\r\n    let TwentyToThirty= {} as PriceRange;\r\n    let ThirtyToFifty= {} as PriceRange;\r\n    zeroToTen.id = 1;\r\n    tenToTwenty.id = 2 ;\r\n    TwentyToThirty.id = 3;\r\n    ThirtyToFifty.id = 4;\r\n    this.priceRanges.push(zeroToTen);\r\n    this.priceRanges.push(tenToTwenty);\r\n    this.priceRanges.push(TwentyToThirty);\r\n    this.priceRanges.push(ThirtyToFifty);\r\n  }\r\n\r\n  onSelectedBrand() : void{\r\n    this.selectedBrands = this.numberOfProductsPerBrand\r\n                             .filter(brandOption => brandOption.checked)\r\n                             .map(brandOption => brandOption.brand);\r\n\r\n    this.router.navigate(['/category', this.category], {queryParams : { page : 0, brand : this.selectedBrands, range : this.selectedPriceRanges}});\r\n  }\r\n\r\n  onSelectedPriceRange() : void{\r\n    this.selectedPriceRanges = this.numberOfProductsPerPriceRange\r\n                             .filter(priceRangeOption => priceRangeOption.checked)\r\n                             .map(priceRangeOption => priceRangeOption.rangeId);\r\n\r\n    this.router.navigate(['/category', this.category], {queryParams : { page : 0, brand : this.selectedBrands, range : this.selectedPriceRanges}});\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.httpSubscription !== undefined) this.httpSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"/* --- Breadcrumbs --- */\\r\\n\\r\\n.breadcrumbs{\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 16px;\\r\\n}\\r\\n\\r\\n/* --- Checkout --- */\\r\\n\\r\\nsection.checkout{\\r\\n    margin-top: 16px;\\r\\n    margin-bottom: 48px;\\r\\n  }\\r\\n\\r\\nsection.checkout .form-group input{\\r\\n    background:\\t#E0E0E0;\\r\\n  }\\r\\n\\r\\nsection.checkout table tbody tr td.radio-button{\\r\\n    padding-right: 0;\\r\\n  }\\r\\n\\r\\nsection.checkout table tbody tr td.shipping-price{\\r\\n    padding-left: 0;\\r\\n    padding-right: 0;\\r\\n    text-align: left;\\r\\n  }\\r\\n\\r\\nsection.checkout table tbody tr td.shipping-method{\\r\\n    padding-left: 0;\\r\\n  }\\r\\n\\r\\nsection.checkout div.billing-method{\\r\\n    padding: 0.75rem;\\r\\n    border: 1px solid #E0E0E0;\\r\\n  }\\r\\n\\r\\nsection.checkout div.billing-method span{\\r\\n    padding-left: 24px;\\r\\n  }\\r\\n\\r\\nsection.checkout div.same-address{\\r\\n    padding-top: 16px;\\r\\n    padding-bottom: 16px;\\r\\n  }\\r\\n\\r\\nsection.checkout .summary div{\\r\\n    margin-bottom: 16px;\\r\\n  }\\r\\n\\r\\nsection.checkout .summary div span.title{\\r\\n    float: left;\\r\\n  }\\r\\n\\r\\nsection.checkout .summary div span.price{\\r\\n    float: right;\\r\\n  }\\r\\n\\r\\nsection.checkout .summary #total{\\r\\n    font-weight: 600;\\r\\n    font-size: 20px;\\r\\n    text-transform: uppercase;\\r\\n  }\\r\\n\\r\\nsection.checkout .summary div::after{\\r\\n    content: \\\"\\\";\\r\\n    clear: both;\\r\\n    display: table;\\r\\n  }\\r\\n\\r\\nsection.checkout h5{\\r\\n    text-align: center;\\r\\n    padding: 12px;\\r\\n    margin-top: 24px;\\r\\n    margin-bottom: 0;\\r\\n    background-color: #E0E0E0;\\r\\n  }\\r\\n\\r\\nsection.checkout div.cart-item{\\r\\n    border: 1.5px solid #E0E0E0;\\r\\n    padding-top: 12px;\\r\\n    padding-bottom: 12px;\\r\\n    margin-left: 0 ;\\r\\n    margin-right : 0 ;\\r\\n  }\\r\\n\\r\\nsection.checkout div.cart-item div.product-name{\\r\\n    font-weight: 300;\\r\\n    font-size: 18px;\\r\\n  }\\r\\n\\r\\nsection.checkout div.cart-item div.product-price{\\r\\n    font-weight: 600;\\r\\n  }\\r\\n\\r\\nsection.checkout div.cart-item div.product-quantity span{\\r\\n    font-weight: 600;\\r\\n  }\\r\\n\\r\\n.spinner{\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    z-index: 999;\\r\\n  }\\r\\n\\r\\n  \\r\\n\\r\\n\"","module.exports = \"<navigation-bar></navigation-bar>\\r\\n\\r\\n<!-- Breadcrumbs -->\\r\\n<div class=\\\"breadcrumbs\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <a routerLink=\\\"/\\\"><i class=\\\"fas fa-home mr-1\\\"></i></a>/\\r\\n      Ολοκλήρωση Αγοράς\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Checkout -->\\r\\n<section  class=\\\"checkout\\\">\\r\\n<div class=\\\"container\\\">\\r\\n  <h1 class=\\\"text-center\\\">Ολοκλήρωση Αγοράς</h1>\\r\\n\\r\\n  <div class=\\\"row mt-5\\\">\\r\\n    <div class=\\\"col-sm-7\\\">\\r\\n        <form (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" id=\\\"ngForm\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n            <h4>Email</h4>\\r\\n\\r\\n             <div class=\\\"form-group\\\">\\r\\n                <label>Email</label>\\r\\n                <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted &&  email.invalid}\\\" required email>\\r\\n                <div *ngIf=\\\"f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"email.errors.required\\\">Πρέπει να συμπληρώσετε το email</div>\\r\\n                    <div *ngIf=\\\"email.errors.email\\\">Το email πρέπει να έχει τη σωστή μορφή</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <h4 class=\\\"mt-4 mb-3\\\">Διεύθυνση αποστολής</h4>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label>Όνομα</label>\\r\\n               <input type=\\\"text\\\" name=\\\"firstname\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.shipping_info.first_name\\\" #firstname=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && firstname.invalid}\\\" required minlength=\\\"2\\\">\\r\\n               <div *ngIf=\\\"f.submitted && firstname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"firstname.errors.required\\\">Πρέπει να συμπληρώσετε το όνομα</div>\\r\\n                <div *ngIf=\\\"firstname.errors.minlength\\\">Το όνομα πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n               </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label>Επίθετο</label>\\r\\n               <input type=\\\"text\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.shipping_info.last_name\\\" #lastname=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && lastname.invalid}\\\" required minlength=\\\"2\\\">\\r\\n               <div *ngIf=\\\"f.submitted && lastname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                 <div *ngIf=\\\"lastname.errors.required\\\">Πρέπει να συμπληρώσετε το επίθετο</div>\\r\\n                 <div *ngIf=\\\"lastname.errors.minlength\\\">Το επίθετο πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n               </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label>Διεύθυνση</label>\\r\\n               <input type=\\\"text\\\" name=\\\"street\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.shipping_info.street\\\" #street=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && street.invalid}\\\" required minlength=\\\"2\\\">\\r\\n               <div *ngIf=\\\"f.submitted && street.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"street.errors.required\\\">Πρέπει να συμπληρώσετε την διέυθυνση</div>\\r\\n                <div *ngIf=\\\"street.errors.minlength\\\">Η διεύθυνση πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label>Ταχυδρομικός κώδικας</label>\\r\\n               <input type=\\\"number\\\" name=\\\"postcode\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.shipping_info.post_code\\\" #postcode=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && postcode.invalid}\\\" required>\\r\\n               <div *ngIf=\\\"f.submitted && postcode.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                 <div *ngIf=\\\"postcode.errors.required\\\">Πρέπει να συμπληρώσετε τον ταχυδρομικό κώδικα</div>\\r\\n              </div>\\r\\n           </div>\\r\\n\\r\\n           <div class=\\\"form-group\\\">\\r\\n               <label>Πόλη</label>\\r\\n               <input type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.shipping_info.city\\\" #city=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && city.invalid}\\\" required minlength=\\\"2\\\">\\r\\n               <div *ngIf=\\\"f.submitted && city.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"city.errors.required\\\">Πρέπει να συμπληρώσετε την πόλη</div>\\r\\n                <div *ngIf=\\\"city.errors.minlength\\\">Η πόλη πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label>Τηλέφωνο</label>\\r\\n               <input type=\\\"number\\\" name=\\\"phone\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.shipping_info.phone\\\" #phone=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && phone.invalid}\\\" required tel>\\r\\n               <div *ngIf=\\\"f.submitted && phone.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"phone.errors.required\\\">Πρέπει να συμπληρώσετε το τηλέφωνο</div>\\r\\n                <div *ngIf=\\\"phone.errors.phone\\\">Το τηλέφωνο πρέπει να έχει τη σωστή μορφή</div>\\r\\n               </div>\\r\\n           </div>\\r\\n\\r\\n           <h4 class=\\\"mt-4 mb-3\\\">Μέθοδοι αποστολής</h4>\\r\\n\\r\\n           <table class=\\\"table\\\">\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td class=\\\"radio-button\\\"><input type=\\\"radio\\\" name=\\\"shipping-cost\\\" [checked] =\\\"isCourierChecked\\\" (change)=\\\"changeShippingCost()\\\"></td>\\r\\n                        <td class=\\\"shipping-price\\\">2€</td>\\r\\n                        <td class=\\\"shipping-method\\\">Courier</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\\"radio-button\\\"><input type=\\\"radio\\\" name=\\\"shipping-cost\\\" [checked] =\\\"!isCourierChecked\\\" (change)=\\\"changeShippingCost()\\\"></td>\\r\\n                        <td class=\\\"shipping-price\\\">0€</td>\\r\\n                        <td class=\\\"shipping-method\\\">Παραλαβή από το κατάστημα</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n           </table>\\r\\n\\r\\n           <h4 class=\\\"mt-4 mb-3\\\">Μέθοδοι πληρωμής</h4>\\r\\n\\r\\n           <div class=\\\"billing-method\\\"><input type=\\\"radio\\\" checked=\\\"checked\\\"><span>Αντικαταβολή</span></div>\\r\\n\\r\\n           <h4 class=\\\"mt-4 mb-3\\\">Διεύθυνση πληρωμής</h4>\\r\\n\\r\\n           <div class=\\\"same-address\\\"><input type=\\\"checkbox\\\" [checked] = \\\"orderDetails.isShippingAddressSameWithBillingAddress\\\" \\r\\n            (change)=\\\"changeisShippingAddressSameWithBillingAddress()\\\"> \\r\\n            Η διεύθυνση πληρωμής είναι ίδια με την διεύθυνση αποστολής</div>\\r\\n\\r\\n            <section *ngIf=\\\"!orderDetails.isShippingAddressSameWithBillingAddress\\\" class=\\\"billing-address\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Όνομα</label>\\r\\n                      <input type=\\\"text\\\" name=\\\"bfirstname\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.billing_info.first_name\\\" #bfirstname=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && bfirstname.invalid}\\\" required minlength=\\\"2\\\">\\r\\n                      <div *ngIf=\\\"f.submitted && bfirstname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"bfirstname.errors.required\\\">Πρέπει να συμπληρώσετε το όνομα</div>\\r\\n                        <div *ngIf=\\\"bfirstname.errors.minlength\\\">Το όνομα πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n            \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Επίθετο</label>\\r\\n                      <input type=\\\"text\\\" name=\\\"blastname\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.billing_info.last_name\\\" #blastname=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && blastname.invalid}\\\" required minlength=\\\"2\\\">\\r\\n                      <div *ngIf=\\\"f.submitted && blastname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"blastname.errors.required\\\">Πρέπει να συμπληρώσετε το επίθετο</div>\\r\\n                        <div *ngIf=\\\"blastname.errors.minlength\\\">Το επίθετο πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n            \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Διεύθυνση</label>\\r\\n                      <input type=\\\"text\\\" name=\\\"bstreet\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.billing_info.street\\\" #bstreet=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && bstreet.invalid}\\\" required minlength=\\\"2\\\">\\r\\n                      <div *ngIf=\\\"f.submitted && bstreet.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"bstreet.errors.required\\\">Πρέπει να συμπληρώσετε την διέυθυνση</div>\\r\\n                        <div *ngIf=\\\"bstreet.errors.minlength\\\">Η διεύθυνση πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n            \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Ταχυδρομικός κώδικας</label>\\r\\n                       <input type=\\\"number\\\" name=\\\"bpostcode\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.billing_info.post_code\\\" #bpostcode=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && bpostcode.invalid}\\\" required>\\r\\n                       <div *ngIf=\\\"f.submitted && bpostcode.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"bpostcode.errors.required\\\">Πρέπει να συμπληρώσετε τον ταχυδρομικό κώδικα</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Πόλη</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"bcity\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.billing_info.city\\\" #bcity=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && bcity.invalid}\\\" required minlength=\\\"2\\\">\\r\\n                        <div *ngIf=\\\"f.submitted && bcity.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                         <div *ngIf=\\\"bcity.errors.required\\\">Πρέπει να συμπληρώσετε την πόλη</div>\\r\\n                         <div *ngIf=\\\"bcity.errors.minlength\\\">Η πόλη πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n                       </div>\\r\\n                     </div>\\r\\n            \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Τηλέφωνο</label>\\r\\n                      <input type=\\\"number\\\" name=\\\"bphone\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderDetails.billing_info.phone\\\" #bphone=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && bphone.invalid}\\\" required tel>\\r\\n                      <div *ngIf=\\\"f.submitted && bphone.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"bphone.errors.required\\\">Πρέπει να συμπληρώσετε το τηλέφωνο</div>\\r\\n                        <div *ngIf=\\\"bphone.errors.phone\\\">Το τηλέφωνο πρέπει να έχει τη σωστή μορφή</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n            </section>\\r\\n        </form>   \\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-5\\\">\\r\\n        <h4 class=\\\"text-center\\\">Περίληψη Παραγγελίας</h4>\\r\\n\\r\\n        <div class=\\\"summary mt-4\\\">\\r\\n            <div><span class=\\\"title \\\">Υποσύνολο</span> <span class=\\\"price\\\">{{getTotalCartPrice()}}€</span></div>\\r\\n            <div><span class=\\\"title\\\">Μεταφορικά</span> <span class=\\\"price\\\">{{shippingCost}}€</span></div>\\r\\n            <div id=\\\"total\\\"><span class=\\\"title\\\">Συνολο</span> <span class=\\\"price\\\">{{getTotalCartPrice() + shippingCost}}€</span></div>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-block btn-primary mt-2\\\" form=\\\"ngForm\\\" [disabled] = \\\"!isAddOrderRequestDone\\\" >Ολοκλήρωση αγοράς</button>\\r\\n\\r\\n        <h5>Καλάθι</h5>\\r\\n\\r\\n        <div *ngFor=\\\"let cartProduct of cartProducts\\\" class=\\\"row cart-item\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n                <img class=\\\"d-block mx-auto\\\" src=\\\"{{cartProduct?.imageUrl}}\\\" alt=\\\"img\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n                <div class=\\\"product-name\\\">{{cartProduct?.name}}</div>\\r\\n                <div class=\\\"product-price\\\">{{cartProduct?.price}} €</div>\\r\\n                <div class=\\\"product-quantity\\\">Ποσότητα : <span>{{cartProduct?.quantity}}</span></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <i *ngIf=\\\"!isAddOrderRequestDone\\\" class=\\\"fas fa-sync-alt fa-2x fa-spin spinner\\\" ></i>\\r\\n\\r\\n</div>  \\r\\n</section>\\r\\n\\r\\n<my-footer></my-footer>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CartProduct } from 'src/app/models/cartProduct';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ShippingInfo } from 'src/app/models/shippingInfo';\r\nimport { BillingInfo } from 'src/app/models/billingInfo';\r\nimport { OrderDetails } from 'src/app/models/orderDetails';\r\nimport { CheckoutService } from 'src/app/services/checkout.service';\r\nimport { Router } from '@angular/router';\r\nimport { Order } from 'src/app/models/order';\r\n\r\n@Component({\r\n  selector: 'checkout-page',\r\n  templateUrl: './checkout-page.component.html',\r\n  styleUrls: ['./checkout-page.component.css']\r\n})\r\nexport class CheckoutPageComponent implements OnInit, OnDestroy {\r\n\r\n  private orderDetails = {} as OrderDetails;\r\n\r\n  private isSameAddressChecked = true;\r\n  private isCourierChecked = true;\r\n  private shippingCost : number;\r\n  private cartProducts : CartProduct[];\r\n  private isAddOrderRequestDone : boolean = true;\r\n\r\n  private isUserLoggedIn : boolean = false;\r\n  private isLocalStorageEmpty : boolean = localStorage.length === 0; \r\n  private httpSubscription : Subscription; \r\n\r\n  constructor(private authenticationService : AuthenticationService, private cartService : CartService\r\n             , private checkoutService : CheckoutService, private router : Router) { }\r\n\r\n  ngOnInit() {\r\n    this.orderDetails.isShippingAddressSameWithBillingAddress = true;\r\n    this.orderDetails.shipping_info = {} as ShippingInfo;\r\n    this.orderDetails.billing_info = {} as BillingInfo;\r\n\r\n    this.shippingCost = this.isCourierChecked ? 2 : 0;\r\n    this.cartProducts = [];\r\n    this.isUserLoggedIn = this.authenticationService.isAuthenticated;\r\n    if(this.isUserLoggedIn && !this.isLocalStorageEmpty){\r\n      let userId = localStorage.getItem('userid');\r\n      this.httpSubscription = this.cartService.getCartProducts(userId).subscribe(cartProducts => this.cartProducts = cartProducts);\r\n    }else if(!this.isUserLoggedIn && this.cartService.doesAnonymousUserCartExist){\r\n      this.cartProducts = this.cartService.getAnonymousUserCart();\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.isAddOrderRequestDone =  false;\r\n    this.orderDetails.cartProducts = this.cartProducts;\r\n    this.orderDetails.shipping_info.method = this.isCourierChecked ? 'Courier' : 'Takeaway';\r\n    this.orderDetails.billing_info.method =  'Cash On Delivery' ;\r\n    if(this.orderDetails.isShippingAddressSameWithBillingAddress)\r\n       this.copyShippingInfoToBillingInfo();\r\n    \r\n    this.checkoutService.addOrder(this.orderDetails).toPromise()\r\n                        .then(order => {\r\n                          this.isAddOrderRequestDone =  true;\r\n                          this.checkoutService.order = order;\r\n                          this.checkoutService.setOrderProducts(this.cartProducts);\r\n                          this.deleteUserCart();\r\n                          this.router.navigate(['/order', order.id]) ;\r\n                          })\r\n                        .catch(errorResponse => {\r\n                          console.log(errorResponse)\r\n                          this.isAddOrderRequestDone =  true;});\r\n  }\r\n\r\n  deleteUserCart() {\r\n    if(this.isUserLoggedIn){\r\n      let userId = localStorage.getItem('userid');\r\n      this.cartService.deleteUserCart(Number(userId)).toPromise()\r\n                      .then()\r\n                      .catch(errorResponse => console.log(errorResponse));\r\n    }else{\r\n      this.cartService.updateAnonymousUserCart([]);\r\n    }\r\n  }\r\n  copyShippingInfoToBillingInfo() : void{\r\n    this.orderDetails.billing_info.first_name = this.orderDetails.shipping_info.first_name;\r\n    this.orderDetails.billing_info.last_name = this.orderDetails.shipping_info.last_name;\r\n    this.orderDetails.billing_info.street = this.orderDetails.shipping_info.street;\r\n    this.orderDetails.billing_info.post_code = this.orderDetails.shipping_info.post_code;\r\n    this.orderDetails.billing_info.city = this.orderDetails.shipping_info.city;\r\n    this.orderDetails.billing_info.phone= this.orderDetails.shipping_info.phone;\r\n  }\r\n\r\n  getTotalCartPrice() : number{\r\n    let totalPrice = 0;\r\n    if(this.cartProducts.length !== 0){\r\n      this.cartProducts.forEach(product => {\r\n        totalPrice += product.price * product.quantity\r\n      });\r\n    }\r\n    return totalPrice;\r\n  }\r\n\r\n  changeShippingCost() : void{\r\n    this.isCourierChecked = !this.isCourierChecked;\r\n    this.shippingCost = this.isCourierChecked ? 2 : 0;\r\n  }\r\n\r\n  changeisShippingAddressSameWithBillingAddress() : void{\r\n    this.orderDetails.isShippingAddressSameWithBillingAddress = !this.orderDetails.isShippingAddressSameWithBillingAddress;\r\n    if(!this.orderDetails.isShippingAddressSameWithBillingAddress){\r\n      this.orderDetails.billing_info = {} as BillingInfo;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if(this.httpSubscription !== undefined) this.httpSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Discount Carousel -->\\n<section  class=\\\"carousel-section\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n          <div id=\\\"carousel-discounts\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n              <ul class=\\\"carousel-indicators\\\">\\n                  <li data-target=\\\"#carousel-discounts\\\" *ngFor = \\\"let deal of deals; let i = index; let isFirstItem = first\\\" \\n                      [attr.data-slide-to] = \\\"i\\\" [ngClass] = \\\"{'active' : isFirstItem}\\\">\\n                  </li>\\n              </ul>\\n                      \\n              <div class=\\\"carousel-inner\\\">\\n                  <div *ngFor = \\\"let deal of deals; let isFirstItem = first\\\" [ngClass] = \\\" isFirstItem ? 'carousel-item active' : 'carousel-item'\\\">\\n                      <img class=\\\"img-fluid\\\" src=\\\"{{deal?.imageUrl}}\\\" alt=\\\"\\\">\\n                  </div>\\n              </div>\\n      \\n              <a class=\\\"carousel-control-prev\\\" href=\\\"#carousel-discounts\\\" data-slide=\\\"prev\\\">\\n                  <span class=\\\"carousel-control-prev-icon\\\"></span>\\n              </a>\\n              <a class=\\\"carousel-control-next\\\" href=\\\"#carousel-discounts\\\" data-slide=\\\"next\\\">\\n                  <span class=\\\"carousel-control-next-icon\\\"></span>\\n              </a>\\n          </div>\\n      </div>\\n      \\n  </div>  \\n</section>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Deal} from '../../models/deal';\nimport {DealService } from 'src/app/services/deal.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'discount-carousel',\n  templateUrl: './discount-carousel.component.html',\n  styleUrls: ['./discount-carousel.component.css']\n})\nexport class DiscountCarouselComponent implements OnInit, OnDestroy {\n  \n  deals : Deal[];\n  httpSubscription : Subscription;\n\n  constructor(private dealService : DealService) { }\n\n  ngOnInit() {\n    this.httpSubscription = this.dealService.getDeals()\n        .subscribe(deals => this.deals = deals);\n  }\n\n  ngOnDestroy(){\n    this.httpSubscription.unsubscribe();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<navigation-bar></navigation-bar>\\n<discount-carousel></discount-carousel>\\n<products-carousel [carouselType] = \\\"popularCarouselType\\\" [carouselTitle] = \\\"popularProductCarouselTitle\\\" [carouselHtmlId] = \\\"popularProductCarouselHtmlId\\\" ></products-carousel>\\n<products-carousel [carouselType] = \\\"newCarouselType\\\" [carouselTitle] = \\\"newProductCarouselTitle\\\" [carouselHtmlId] = \\\"newProductCarouselHtmlId\\\"></products-carousel>\\n<shop-services></shop-services>\\n<my-footer></my-footer>\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'index-page',\r\n  templateUrl: './index-page.component.html',\r\n  styleUrls: ['./index-page.component.css']\r\n})\r\nexport class IndexPageComponent implements OnInit {\r\n\r\n  popularProductCarouselTitle : string;\r\n  newProductCarouselTitle : string;\r\n  popularProductCarouselHtmlId : string;\r\n  newProductCarouselHtmlId : string;\r\n  popularCarouselType : string;\r\n  newCarouselType : string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.popularProductCarouselTitle = 'Δημοφιλή Προιόντα';\r\n    this.newProductCarouselTitle = 'Νέα Προιόντα';\r\n    this.popularProductCarouselHtmlId = 'carousel-popular-products';\r\n    this.newProductCarouselHtmlId = 'carousel-new-products';\r\n    this.popularCarouselType = 'favorite';\r\n    this.newCarouselType = 'new';\r\n  }\r\n\r\n}\r\n","module.exports = \"/* --- Breadcrumbs --- */\\r\\n\\r\\n.breadcrumbs{\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 16px;\\r\\n}\\r\\n\\r\\n/* --- Login --- */\\r\\n\\r\\nsection.login{\\r\\n  padding-bottom: 32px;\\r\\n}\\r\\n\\r\\nsection.login h1{\\r\\n  text-align: center;\\r\\n  margin-bottom: 32px;\\r\\n}\\r\\n\\r\\nsection.login form .form-group input{\\r\\n  background:\\t#E0E0E0;\\r\\n}\\r\\n\\r\\nsection.login form .submit{\\r\\n  text-align: center;\\r\\n  margin-top: 32px\\r\\n}\\r\\n\\r\\nsection.login form .submit button{\\r\\n  padding-left: 24px;\\r\\n  padding-right: 24px;\\r\\n  margin-right: 16px;\\r\\n}\\r\\n\\r\\nsection.login form .submit a{\\r\\n  text-decoration: underline;\\r\\n}\\r\\n\\r\\nsection.login form .submit a:hover{\\r\\n  text-decoration: none;\\r\\n}\"","module.exports = \"<navigation-bar></navigation-bar>\\r\\n\\r\\n<!-- Breadcrumbs -->\\r\\n<div class=\\\"breadcrumbs\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <a routerLink=\\\"/\\\"><i class=\\\"fas fa-home mr-1\\\"></i></a>/\\r\\n        Είσοδος\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<section *ngIf=\\\"isRedirectedFromRegister\\\" class=\\\"my-4\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div  class=\\\"alert alert-success text-center\\\">\\r\\n             Η εγγραφή πραγματοποιήθηκε επιτυχώς\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<!-- Login -->\\r\\n<section class=\\\"login\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <h1>Είσοδος</h1>\\r\\n\\r\\n            <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>E-mail</label>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"userCredentials.email\\\" #email = \\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': f.submitted && (email.invalid || emailDoesNotExist)}\\\" required email>\\r\\n                    <div *ngIf=\\\"f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"email.errors.required\\\">Πρέπει να συμπληρώσετε το email</div>\\r\\n                        <div *ngIf=\\\"email.errors.email\\\">Το email πρέπει να έχει τη σωστή μορφή</div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"emailDoesNotExist\\\" class=\\\"invalid-feedback\\\">{{emailDoesNotExistErrorMessage}}</div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Kωδικός</label>\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"userCredentials.password\\\" #password = \\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': f.submitted && (password.invalid || passwordIsNotCorrect)}\\\" required>\\r\\n                    <div *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"password.errors.required\\\">Πρέπει να πληκτρολογήσετε έναν κωδικό</div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"passwordIsNotCorrect\\\" class=\\\"invalid-feedback\\\">{{passwordIsNotCorrectErrorMessage}}</div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"submit\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\">Είσοδος</button>\\r\\n                </div>\\r\\n               </form>\\r\\n        </div>\\r\\n</section>\\r\\n\\r\\n<my-footer></my-footer>\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserCredentials } from 'src/app/models/userCredentials';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit, OnDestroy {\r\n  \r\n  userCredentials : UserCredentials;\r\n  emailDoesNotExistErrorMessage : string = 'Δεν υπάρχει λογαριασμός με αυτό το email';\r\n  passwordIsNotCorrectErrorMessage : string = 'Ο κωδικός δεν είναι σωστός';\r\n  genericError : string = 'Κάτι πήγε στραβά';\r\n\r\n  emailDoesNotExist : boolean = false;\r\n  passwordIsNotCorrect : boolean = false;\r\n  isRedirectedFromRegister : boolean =  false;\r\n  routeSubscription : Subscription;\r\n\r\n  constructor(private route : ActivatedRoute, private router : Router,  private authenticationService : AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    this.userCredentials = {} as UserCredentials;\r\n    this.routeSubscription = this.route.queryParams.subscribe(params => {\r\n      if(params['redirect'] === 'register') this.isRedirectedFromRegister = true;\r\n    });\r\n  }\r\n\r\n   async login() {\r\n    let authenticationMessage = await this.authenticationService.login(this.userCredentials);\r\n    if(authenticationMessage === this.emailDoesNotExistErrorMessage){\r\n      this.emailDoesNotExist = true;\r\n      this.passwordIsNotCorrect = false;\r\n    }else if(authenticationMessage === this.passwordIsNotCorrectErrorMessage){\r\n      this.emailDoesNotExist = false;\r\n      this.passwordIsNotCorrect = true;\r\n    }else if(authenticationMessage === this.genericError){\r\n      this.emailDoesNotExist = false;\r\n      this.passwordIsNotCorrect = false;\r\n    }else{\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if(this.routeSubscription !== undefined) this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"/* --- Footer --- */\\r\\nfooter{\\r\\n    text-align: left;\\r\\n    padding-top: 64px;\\r\\n    padding-bottom: 64px;\\r\\n  }\\r\\nfooter h3{\\r\\n    font-size: 18px;\\r\\n    text-transform: uppercase;\\r\\n  }\\r\\nfooter .menu a{\\r\\n    font-size: 16px;\\r\\n    display: block;\\r\\n    margin-top: 4px;\\r\\n    margin-bottom: 4px;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n@media (max-width: 768px){\\r\\n    footer .container .row{\\r\\n      text-align: center;\\r\\n    }\\r\\n  \\r\\n    footer .container .row .col-sm-4:nth-child(2){\\r\\n      margin-top: 16px;\\r\\n      margin-bottom: 16px;\\r\\n    }\\r\\n  }\"","module.exports = \"<!-- Footer -->\\r\\n<footer  class=\\\"footer\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n              <h3>Πληροφοριες</h3>\\r\\n              <div class=\\\"menu\\\">\\r\\n                  <a>Η Εταιρία μας</a>\\r\\n                  <a>Όροι Χρήσης</a>\\r\\n                  <a>Ασφάλεια συναλλαγών</a>\\r\\n                  <a>Προστασία Προσωπικών Δεδομένων</a>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n              <h3>Παραγγελιες</h3>\\r\\n              <div class=\\\"menu\\\">\\r\\n                  <a>Τρόποι Παραγγελίας</a>\\r\\n                  <a>Τρόποι Πληρωμής</a>\\r\\n                  <a>Τρόποι Αποστολής</a>\\r\\n                  <a>Επιστροφές Προιόντων</a>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n              <h3>Επικοινωνια</h3>\\r\\n              <div class=\\\"menu\\\">\\r\\n                  <a><i class=\\\"fas fa-map-marker-alt mr-2\\\"></i>My Company Glasgow D04 89GR</a>\\r\\n                  <a><i class=\\\"fas fa-phone mr-2\\\"></i>231044444</a>\\r\\n                  <a><i class=\\\"fas fa-envelope mr-2\\\"></i>livedemo-admin@templatemonster.me</a>\\r\\n                  <a><i class=\\\"fas fa-clock mr-2\\\"></i>7 days a week from 8:00 am to 5:00 pm</a>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>  \\r\\n</footer>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-footer',\r\n  templateUrl: './my-footer.component.html',\r\n  styleUrls: ['./my-footer.component.css']\r\n})\r\nexport class MyFooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"/* --- First Navbar --- */\\r\\n\\r\\n#firstNavbar{\\r\\n    padding-bottom: 0;\\r\\n  }\\r\\n\\r\\n#firstNavbar a.navbar-brand{\\r\\n    font-size: 40px;\\r\\n  }\\r\\n\\r\\n#firstNavbar a.navbar-brand span{\\r\\n    color: #04BF00;\\r\\n    font-weight: 700;\\r\\n  }\\r\\n\\r\\n#firstNavbar a.navbar-brand:hover{\\r\\n      color: #333333;\\r\\n    }\\r\\n\\r\\n#firstNavbar input.form-control{\\r\\n    border: 2px solid #04BF00;\\r\\n    width: 270px;\\r\\n  }\\r\\n\\r\\n#firstNavbar ul.navbar-nav a.nav-link{\\r\\n    font-size: 20px;\\r\\n  }\\r\\n\\r\\n#firstNavbar ul.navbar-nav a.nav-link i{\\r\\n    color: #04BF00;\\r\\n  }\\r\\n\\r\\n#firstNavbar ul.navbar-nav a.nav-link.cart-name{\\r\\n    padding: 0;\\r\\n  }\\r\\n\\r\\n#firstNavbar ul.navbar-nav div.cart-items{\\r\\n    font-size : 14px;\\r\\n  }\\r\\n\\r\\n#firstNavbar ul.navbar-nav li.nav-item.user-info{\\r\\n    text-align: center;\\r\\n    font-size: 20px;\\r\\n    padding-left:8px;\\r\\n    padding-right:8px;\\r\\n  }\\r\\n\\r\\n#firstNavbar ul.navbar-nav li.nav-item.user-info div.username{\\r\\n    font-size:16px;\\r\\n    font-style: italic;\\r\\n    font-weight: 600;\\r\\n  }\\r\\n\\r\\n#firstNavbar ul.navbar-nav a.nav-link.logout:hover{\\r\\n    color: #04BF00;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n@media (max-width: 992px){\\r\\n    #firstNavbar a.navbar-brand{\\r\\n      font-size: 28px;\\r\\n    }\\r\\n  \\r\\n    #firstNavbar input.form-control{\\r\\n      border: 2px solid #04BF00;\\r\\n      width: 200px;\\r\\n    }\\r\\n\\r\\n    #secondNavbar ul.navbar-nav li a{\\r\\n      padding: 2px;\\r\\n    }\\r\\n  }\\r\\n\\r\\n/* --- Second Navbar --- */\\r\\n\\r\\n#secondNavbar ul.navbar-nav a.nav-link{\\r\\n    font-size: 20px;\\r\\n  }\\r\\n\\r\\n#secondNavbar{\\r\\n    padding-top: 0;\\r\\n  }\\r\\n\\r\\n#secondNavbar ul.navbar-nav li{\\r\\n    margin-right: 40px;\\r\\n  }\"","module.exports = \"<!-- Navigation -->\\r\\n<nav class=\\\"navbar navbar-expand-lg\\\" id=\\\"firstNavbar\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\"> <span>Super</span>Pharmacy</a>\\r\\n\\r\\n      <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\">\\r\\n           Menu<i class=\\\"fa fa-bars\\\"></i>\\r\\n      </button>\\r\\n\\r\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\r\\n\\r\\n           <form class=\\\"form-inline mx-auto\\\">\\r\\n               <div class=\\\"input-group\\\">\\r\\n                   <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"\\\">\\r\\n                   <div class=\\\"input-group-append\\\">\\r\\n                       <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n                           <i class=\\\"fas fa-search\\\"></i>\\r\\n                        </button>\\r\\n                   </div>\\r\\n               </div>    \\r\\n           </form>\\r\\n\\r\\n          <ul class=\\\"navbar-nav\\\">\\r\\n               <li *ngIf=\\\"!isUserLoggedIn\\\" class=\\\"nav-item\\\">\\r\\n                   <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Εγγραφή</a>\\r\\n               </li>\\r\\n\\r\\n               <li *ngIf=\\\"!isUserLoggedIn\\\" class=\\\"nav-item\\\">\\r\\n                   <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Είσοδος</a>\\r\\n               </li>\\r\\n\\r\\n               <li *ngIf=\\\"isUserLoggedIn\\\" class=\\\"nav-item user-info\\\">\\r\\n                  <div>Καλώς ήρθες,</div>\\r\\n                  <div class=\\\"username\\\">{{user}}</div>\\r\\n               </li>\\r\\n\\r\\n               <li class=\\\"nav-item\\\">\\r\\n                 <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/cart\\\">\\r\\n                          <i class=\\\"fas fa-shopping-cart\\\"></i>\\r\\n                        </a>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n                        <div><a class=\\\"nav-link cart-name\\\" routerLink=\\\"/cart\\\">Καλάθι</a></div>\\r\\n                        <div class=\\\"cart-items\\\">{{cartProductCount}} προιόντα</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n               </li>\\r\\n\\r\\n               <li *ngIf=\\\"isUserLoggedIn\\\" class=\\\"nav-item\\\">\\r\\n                 <a class=\\\"nav-link logout\\\" (click)=\\\"logout()\\\">Αποσύνδεση</a>\\r\\n               </li>\\r\\n          </ul>\\r\\n      </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<!-- Navigation -->\\r\\n<nav class=\\\"navbar navbar-expand-md\\\" id=\\\"secondNavbar\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <ul class=\\\"navbar-nav mx-md-auto\\\">\\r\\n          <li *ngFor=\\\"let category of categories\\\" class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/category/{{category.englishName}}\\\" [queryParams]=\\\"{ page: pageParam, brand : brandParams, range : rangeParams}\\\">{{category.greekName}}</a>\\r\\n          </li>\\r\\n      </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit, AfterViewInit, OnChanges } from '@angular/core';\r\nimport { NavigationCategory } from 'src/app/models/navigationCategory';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\n\r\n@Component({\r\n  selector: 'navigation-bar',\r\n  templateUrl: './navigation-bar.component.html',\r\n  styleUrls: ['./navigation-bar.component.css']\r\n})\r\nexport class NavigationBarComponent implements OnInit{\r\n  \r\n\r\n  categories : NavigationCategory[];\r\n  greekCategoryNames : string[ ] = ['Βιταμίνες','Μέταλλα','Ιχθυέλαια','Υπερτροφές','Αρώματα','Σαμπουάν'];\r\n  englishCategoryNames : string[ ] = ['vitamins','minerals','fish-oils','superfoods','fragrances','shampoos'];\r\n  pageParam : number = 0;\r\n  brandParams : string[] = [];\r\n  rangeParams : string[] = [];\r\n  private cartProductCount : number = 0;\r\n  private isUserLoggedIn : boolean = false;\r\n  private isLocalStorageEmpty : boolean = localStorage.length === 0;  \r\n  private user : string = '';\r\n  public userId : string = '';\r\n\r\n  constructor( private authenticationService : AuthenticationService, private cartService : CartService) { }\r\n\r\n  async ngOnInit() {\r\n    this.initialiseCategories();\r\n    this.isUserLoggedIn = this.authenticationService.isAuthenticated;\r\n    if(this.isUserLoggedIn){\r\n\r\n      if(!this.isLocalStorageEmpty){\r\n        this.storeUserName()\r\n        this.setCartCount(this.userId);\r\n\r\n      }else{\r\n\r\n        await this.authenticationService.getSessionDataAgain();\r\n        this.storeUserName(); \r\n      }\r\n    }else{\r\n      this.setAnonymousUserCartCount();\r\n    }\r\n\r\n  }\r\n\r\n  storeUserName() : void{\r\n    let storedUser = localStorage.getItem('user');\r\n    let storedUserId = localStorage.getItem('userid');\r\n    if(storedUser !== undefined) this.user = storedUser;\r\n    if(storedUserId !== undefined) this.userId = storedUserId;\r\n  }\r\n\r\n  initialiseCategories() : void{\r\n    this.categories = [];\r\n    for(let i=0; i < this.greekCategoryNames.length; i++){\r\n      let navigationCategory = {} as NavigationCategory;\r\n      navigationCategory.greekName = this.greekCategoryNames[i];\r\n      navigationCategory.englishName =  this.englishCategoryNames[i];\r\n      this.categories.push(navigationCategory);\r\n    }\r\n  }\r\n\r\n  logout(){\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n  setCartCount(userId : string) : void{\r\n    this.cartService.getCartProductsCount(userId).toPromise()\r\n                    .then(cartProductCount => this.cartProductCount = cartProductCount.count)\r\n                    .catch(errorResponse => console.log(errorResponse));\r\n  }\r\n\r\n  setAnonymousUserCartCount() : void{\r\n    this.cartProductCount = this.cartService.getAnonymousUserCartCount();\r\n  }\r\n\r\n}\r\n","module.exports = \"/* --- Breadcrumbs --- */\\r\\n\\r\\n.breadcrumbs{\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 32px;\\r\\n}\\r\\n\\r\\nsection.order .order-products{\\r\\n    margin-top: 32px;\\r\\n  }\\r\\n\\r\\nsection.order .table-responsive{\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\nsection.order table tr, section.cart table tr{\\r\\n    border-left: 1px solid #dee2e6;\\r\\n    border-right: 1px solid #dee2e6;\\r\\n  }\\r\\n\\r\\nsection.order table tr td{\\r\\n    padding-top: 1.25rem;\\r\\n    padding-bottom: 1.25rem;\\r\\n  }\\r\\n\\r\\nsection.order table td a.brand{\\r\\n    display: block;\\r\\n    font-size: 16px;\\r\\n    font-weight: 300;\\r\\n    margin-bottom:8px;\\r\\n  }\\r\\n\\r\\nsection.order table td a.brand:hover, section.cart table td a.name:hover{\\r\\n    -webkit-text-decoration-style: none;\\r\\n            text-decoration-style: none;\\r\\n  }\\r\\n\\r\\nsection.order table td a.name{\\r\\n    display: block;\\r\\n    font-size: 18px;\\r\\n    font-weight: 400;\\r\\n    margin-bottom:8px;\\r\\n  }\\r\\n\\r\\nsection.order div.order-info{\\r\\n    text-align: center;\\r\\n    margin-bottom: 48px;\\r\\n    margin-top : 8px;\\r\\n  }\\r\\n\\r\\nsection.order div.order-info h3{\\r\\n    margin-bottom: 16px;\\r\\n  }\\r\\n\\r\\nsection.order div.order-info div{\\r\\n    font-size: 18px;\\r\\n    font-weight: 300;\\r\\n  }\\r\\n\\r\\nsection.order div.shipping-info{\\r\\n    border-right: 1px solid black;\\r\\n  }\\r\\n\\r\\nsection.order button{\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n  }\"","module.exports = \"<navigation-bar></navigation-bar>\\r\\n\\r\\n<!-- Breadcrumbs -->\\r\\n<div class=\\\"breadcrumbs\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n            <a routerLink=\\\"/\\\"><i class=\\\"fas fa-home mr-1\\\"></i></a> / Παραγγελία / {{order.id}}\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Order Summary -->\\r\\n<section class=\\\"order container\\\">\\r\\n\\r\\n    <h1 class=\\\"text-center mb-4\\\">Λεπτομέρειες Παραγγελίας</h1>\\r\\n    <p class=\\\"mb-4\\\">Αγαπητέ <strong>{{user}}</strong>, η παραγγελίας σας πραγματοποιήθηκε επιτυχώς.</p>\\r\\n\\r\\n    <p><strong>Ημερομηνία : </strong> {{date}}</p>\\r\\n    <p><strong>Αριθμός : </strong> {{order.id}}</p>\\r\\n    <p><strong>Κατάσταση : </strong>{{order.status}}</p>\\r\\n\\r\\n    <div class=\\\"row order-products\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead class=\\\"text-center\\\">\\r\\n                                <th>Εικόνα</th>\\r\\n                                <th>Προιόν</th>\\r\\n                                <th>Ποσότητα</th>\\r\\n                                <th>Τιμή</th>\\r\\n                                <th>Σύνολο</th>\\r\\n                            </thead>\\r\\n    \\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let product of orderProducts\\\">\\r\\n                                    <td><img class=\\\"d-block mx-auto\\\" src=\\\"{{product.imageUrl}}\\\" /></td>\\r\\n                                    <td class=\\\"text-left\\\">\\r\\n                                        <a routerLink=\\\"/product/{{product.name}}\\\" class=\\\"brand\\\">{{product.brand}}</a>\\r\\n                                        <a routerLink=\\\"/product/{{product.name}}\\\" class=\\\"name\\\">{{product.name}}</a>\\r\\n                                   </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"text-center\\\">{{product.quantity}}</div>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\">{{product.price}}€</td>\\r\\n                                    <td class=\\\"text-center\\\">{{product.price * product.quantity}}€</td>\\r\\n                                </tr>\\r\\n\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-center\\\">Μεταφορικά</td>\\r\\n                                    <td class=\\\"text-center\\\">{{shippingCost}}€</td>\\r\\n                                </tr>\\r\\n    \\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td></td>\\r\\n                                    <td class=\\\"text-center\\\">Σύνολο</td>\\r\\n                                    <td class=\\\"text-center\\\">{{getTotalCartPrice()}}€</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n            </div>    \\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row order-info\\\">\\r\\n        <div class=\\\"col-sm-6 shipping-info\\\">\\r\\n            <h3>Πληροφορίες αποστολής</h3>\\r\\n            <div>{{order.shippingInfo.first_name}} {{order.shippingInfo.last_name}}</div>\\r\\n            <div>{{order.shippingInfo.email}}</div>\\r\\n            <div>{{order.shippingInfo.street}}</div>\\r\\n            <div>{{order.shippingInfo.post_code}}</div>\\r\\n            <div>{{order.shippingInfo.city}}</div>\\r\\n            <div>{{order.shippingInfo.phone}}</div>\\r\\n            <div><strong>Μέθοδος αποστολής : </strong>{{order.shippingInfo.method}}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-6 billing-info\\\">\\r\\n            <h3>Πληροφορίες χρέωσης</h3>\\r\\n            <div>{{order.billingInfo.first_name}} {{order.billingInfo.last_name}}</div>\\r\\n            <div>{{order.billingInfo.email}}</div>\\r\\n            <div>{{order.billingInfo.street}}</div>\\r\\n            <div>{{order.billingInfo.post_code}}</div>\\r\\n            <div>{{order.billingInfo.city}}</div>\\r\\n            <div>{{order.billingInfo.phone}}</div>\\r\\n            <div><strong>Μέθοδος χρέωσης : </strong>{{order.billingInfo.method}}</div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"navigateToIndex()\\\">Επιστροφή στην αρχική</button>\\r\\n</section>\\r\\n\\r\\n<my-footer></my-footer>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Order } from 'src/app/models/order';\r\nimport { CheckoutService } from 'src/app/services/checkout.service';\r\nimport { CartProduct } from 'src/app/models/cartProduct';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit, OnDestroy {\r\n\r\n  private order = {} as Order;\r\n  private orderProducts : CartProduct[] = [];\r\n  private user : string;\r\n  private date : string;\r\n  private shippingCost : number;\r\n  private routeSubscription : Subscription;\r\n\r\n  constructor(private router : Router, private checkoutService : CheckoutService) { }\r\n\r\n  ngOnInit() {\r\n    this.order = this.checkoutService.getCurrentOrder();\r\n    this.date = this.getOrderDate();\r\n    this.orderProducts =  this.checkoutService.getOrderProducts();\r\n    this.shippingCost = this.order.shippingInfo.method === 'Courier' ? 2 : 0 ;\r\n    this.user = this.order.user === null ? 'χρήστη' : this.order.user.first_name + ' ' + this.order.user.last_name;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if(this.routeSubscription !== undefined) this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  getOrderDate() : string{\r\n    let date = new Date(new Date(this.order.order_date)).getDate();\r\n    let month = new Date(new Date(this.order.order_date)).getMonth();\r\n    let year = new Date(new Date(this.order.order_date)).getFullYear();\r\n    return date + '/' + month + '/' + year;\r\n  }\r\n\r\n  getTotalCartPrice() : number{\r\n    let totalPrice = 0;\r\n    if(this.orderProducts.length !== 0){\r\n      this.orderProducts.forEach(product => {\r\n        totalPrice += product.price * product.quantity\r\n      });\r\n    }\r\n    return totalPrice + this.shippingCost;\r\n  }\r\n\r\n  navigateToIndex() : void{\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","module.exports = \"/* --- Breadcrumbs --- */\\r\\n\\r\\n.breadcrumbs{\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 16px;\\r\\n}\\r\\n\\r\\n.breadcrumbs a.route:hover{\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n/* --- Product --- */\\r\\n\\r\\n.product-details{\\r\\n  margin-top: 16px;\\r\\n}\\r\\n\\r\\n.product-details h3{\\r\\n  color: #E00000 ;\\r\\n}\\r\\n\\r\\np span.checked{\\r\\n  color: orange;\\r\\n}\\r\\n\\r\\ndiv.product-details div.input-group{\\r\\n    width: 176px;\\r\\n\\r\\n    margin-bottom: 16px;\\r\\n  }\\r\\n\\r\\ndiv.product-details div.input-group button{\\r\\n    width: 40px;\\r\\n    height: 40px;\\r\\n  }\\r\\n\\r\\ndiv.input-group span{\\r\\n    width: 96px;\\r\\n    line-height: 40px;\\r\\n    text-align:center;\\r\\n    border:0.5px inset black;\\r\\n    display: inline-block;\\r\\n  }\\r\\n\\r\\n.spinner{\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    z-index: 999;\\r\\n  }\\r\\n\\r\\n@media (max-width: 576px){\\r\\n\\r\\n.product-image img{\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n  }\\r\\n\\r\\n.product-details{\\r\\n    text-align: center;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* --- Addition Product Information--- */\\r\\n\\r\\nsection.product-information{\\r\\n      margin-top: 24px;\\r\\n      margin-bottom: 32px;\\r\\n    }\\r\\n\\r\\nsection.product-information .tab-content #description p{\\r\\n      margin-bottom: 0;\\r\\n    }\\r\\n\\r\\nsection.product-information ul li.nav-item a.active{\\r\\n      background-color: #04BF00;\\r\\n    }\"","module.exports = \"<navigation-bar></navigation-bar>\\r\\n\\r\\n<!-- Breadcrumbs -->\\r\\n<div class=\\\"breadcrumbs\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <a routerLink=\\\"/\\\"><i class=\\\"fas fa-home mr-1\\\"></i></a>\\r\\n        / <a routerLink=\\\"/category/{{categoryRoute}}\\\" class=\\\"route\\\" [queryParams]=\\\"{ page: pageParam}\\\">{{productCategory}}</a>\\r\\n        / {{product?.name}}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-4 product-image\\\">\\r\\n            <img class=\\\"img-fluid\\\" src=\\\"{{product?.largeImageUrl}}\\\" alt=\\\"\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4 product-details\\\">\\r\\n            <h4>{{product?.name}}</h4>\\r\\n            <h3>{{product?.price}}€</h3>\\r\\n            <p><span class=\\\"fa fa-star checked\\\"></span>\\r\\n                <span class=\\\"fa fa-star checked\\\"></span>\\r\\n                <span class=\\\"fa fa-star checked\\\"></span>\\r\\n                <span class=\\\"fa fa-star checked\\\"></span>\\r\\n                <span class=\\\"fa fa-star\\\"></span>\\r\\n            </p>\\r\\n            <p><strong>Εταιρία</strong> : {{product?.brand.name}}</p>\\r\\n            <p><strong>Κωδικός Προιόντος</strong> : 14325</p>\\r\\n            <p><strong>Πόντοι ανταμοιβής</strong> : 250</p>\\r\\n            <p><strong>Διαθεσιμότητα</strong> : {{productAvailability}}</p>\\r\\n\\r\\n            <div *ngIf=\\\"isProductAvailable\\\" class=\\\"input-group\\\">\\r\\n                <button type=\\\"button\\\" (click)=\\\"decreaseProductQuantity()\\\" [disabled] = \\\"isProductQuantityOne()\\\" >-</button>\\r\\n                <span>{{wantedQuantity}}</span>\\r\\n                <button type=\\\"button\\\" (click)=\\\"increaseProductQuantity()\\\">+</button>\\r\\n            </div>\\r\\n\\r\\n            <button *ngIf=\\\"isProductAvailable\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled] = \\\"!isAddProductRequestDone\\\" (click)=\\\"addProductToCart()\\\">\\r\\n                <i class=\\\"fas fa-cart-plus mr-2\\\"></i>Προσθήκη στο καλάθι\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<i *ngIf=\\\"!isAddProductRequestDone\\\" class=\\\"fas fa-sync-alt fa-2x fa-spin spinner\\\" ></i>\\r\\n\\r\\n<!-- Additional Product Informaition -->\\r\\n<section class=\\\"product-information\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n              <ul class=\\\"nav nav-pills\\\">\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" href=\\\"#description\\\">Περιγραφή</a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" href=\\\"#additional-info\\\">Επιπλέον Πληροφοριες</a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" href=\\\"#reviews\\\">Αξιολογήσεις</a>\\r\\n                  </li>\\r\\n              </ul>\\r\\n\\r\\n              <div class=\\\"tab-content\\\">\\r\\n                  <div id=\\\"description\\\" class=\\\"container tab-pane active\\\">\\r\\n                      <br>\\r\\n                      <p>{{product?.description}}</p>\\r\\n   \\r\\n                      \\r\\n                  </div> \\r\\n                  <div id=\\\"additional-info\\\" class=\\\"container tab-pane fade\\\">\\r\\n                      <br>\\r\\n                      <p><strong>Health is one of most important things in our life.</strong> \\r\\n                          We think that it is a real luck to have a strong health. \\r\\n                          Our way of life doesn’t increase the physiological condition of our body. \\r\\n                          Alcohol, cigarettes, unhealthy food, stresses and other factors have a great influence on our health. \\r\\n                          The human’s immune system is very uncertain thing because there is a countless quantity of different dangerous viruses and bacteria. From ancient times plague and other infectious diseases have been killing people without leaving them any chance to survive.</p>\\r\\n                  </div>\\r\\n                  <div id=\\\"reviews\\\" class=\\\"container tab-pane fade\\\">\\r\\n                      <br>\\r\\n                      <p>There are no reviews for this product.</p>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Γράψτε μια αξιολόγηση</button>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<my-footer></my-footer>\\r\\n\\r\\n\"","import { Component, OnInit, Input, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Product } from 'src/app/models/product';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { CartProduct } from 'src/app/models/cartProduct';\r\nimport { NavigationBarComponent } from '../navigation-bar/navigation-bar.component';\r\nimport { NavigationCategory } from 'src/app/models/navigationCategory';\r\n\r\n@Component({\r\n  selector: 'product-page',\r\n  templateUrl: './product-page.component.html',\r\n  styleUrls: ['./product-page.component.css']\r\n})\r\nexport class ProductPageComponent implements OnInit, OnDestroy {\r\n\r\n  productNameParam : string;\r\n  product : Product;\r\n  available : string = \"Σε απόθεμα\";\r\n  notAvailable  : string = \"Δεν είναι διαθέσιμο\";\r\n  productAvailability : string = \"\";\r\n  routeSubscription : Subscription;\r\n  httpSubscription : Subscription;\r\n  wantedQuantity : number = 1;\r\n  isProductAvailable : boolean = false;\r\n  isAddProductRequestDone : boolean = true;\r\n\r\n  productCategory : string ;\r\n  categoryRoute : string;\r\n  pageParam : number = 0;\r\n  categories = {\r\n    Vitamins : { greekName : 'Βιταμίνες', route : 'vitamins'},\r\n    Minerals : { greekName : 'Μέταλλα', route : 'minerals'},\r\n    Fishoils : { greekName : 'Ιχθυέλαια', route : 'fish-oils'},\r\n    Superfoods : { greekName : 'Υπερτροφές', route : 'superfoods'},\r\n    Fragrances : { greekName : 'Αρώματα', route : 'fragrances'},\r\n    Shampoos : { greekName : 'Σαμπουάν', route : 'shampoos'}\r\n  };\r\n\r\n  @ViewChild(NavigationBarComponent) navigationBar : NavigationBarComponent;\r\n  private isUserLoggedIn : boolean = false;\r\n  private isLocalStorageEmpty : boolean = localStorage.length === 0;  \r\n\r\n  constructor(private route : ActivatedRoute, private authenticationService : AuthenticationService\r\n    , private cartService : CartService, private productService : ProductService) { }\r\n\r\n  ngOnInit() {\r\n    this.isUserLoggedIn = this.authenticationService.isAuthenticated;\r\n    this.routeSubscription = this.route.params.subscribe(params => this.productNameParam = params['name']);\r\n    this.httpSubscription = this.productService.getSingleProduct(this.productNameParam)\r\n                                              .subscribe(product => {\r\n                                                this.product = product;\r\n                                                this.productCategory = product.category.name === 'Fish-Oils' ? this.categories.Fishoils.greekName : this.categories[product.category.name].greekName;\r\n                                                this.categoryRoute = product.category.name === 'Fish-Oils' ? this.categories.Fishoils.route : this.categories[product.category.name].route;\r\n                                                this.isProductAvailable = product.quantity > 0;\r\n                                                this.productAvailability =  this.isProductAvailable ? this.available : this.notAvailable ;\r\n                                              });\r\n    \r\n  }\r\n\r\n  increaseProductQuantity() : void{\r\n    this.wantedQuantity += 1;\r\n  }\r\n\r\n  decreaseProductQuantity() : void{\r\n    this.wantedQuantity -= 1;\r\n  }\r\n\r\n  isProductQuantityOne() : boolean{\r\n    return this.wantedQuantity == 1;\r\n  }\r\n\r\n  addProductToCart() : void{\r\n    if(this.isUserLoggedIn && !this.isLocalStorageEmpty){\r\n      let userId = localStorage.getItem('userid');\r\n      this.isAddProductRequestDone = false;\r\n      this.cartService.getCartProduct(Number(userId), this.product.id).toPromise()\r\n                      .then(cartProduct => {\r\n                        cartProduct.quantity = cartProduct.quantity + this.wantedQuantity;\r\n                        this.cartService.updateCartProduct(cartProduct).toPromise()\r\n                        .then(response => {\r\n                          this.navigationBar.setCartCount(this.navigationBar.userId);\r\n                          this.isAddProductRequestDone = true;\r\n                        })\r\n                        .catch(errorResponse => {\r\n                          console.log(errorResponse);\r\n                        });\r\n                      })\r\n                      .catch( errorResponse => {\r\n                         this.cartService.addProductTocart(Number(userId), this.product.id, this.wantedQuantity)\r\n                                         .toPromise()\r\n                                         .then(cartProduct => {\r\n                                           this.navigationBar.setCartCount(this.navigationBar.userId);\r\n                                           this.isAddProductRequestDone = true;\r\n                                          })\r\n                                         .catch(errorResponse => {\r\n                                           console.log(errorResponse);\r\n                                           this.isAddProductRequestDone = true;\r\n                                          });\r\n                      });\r\n    }else if(!this.isUserLoggedIn){\r\n      let cartProduct = {} as CartProduct;\r\n      cartProduct.productid = this.product.id;\r\n      cartProduct.name = this.product.name;\r\n      cartProduct.brand= this.product.brand.name;\r\n      cartProduct.price = this.product.price;\r\n      cartProduct.quantity = this.wantedQuantity;\r\n      cartProduct.imageUrl = this.product.verySmallImageUrl;\r\n      this.cartService.addProductToAnonymousUserCart(cartProduct);\r\n      this.navigationBar.setAnonymousUserCartCount();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.routeSubscription.unsubscribe();\r\n    this.httpSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \".product img{\\r\\n  margin-bottom: 16px;\\r\\n}\\r\\n\\r\\n.product a:hover{\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n.product p.brand{\\r\\n  font-size: 16px;\\r\\n  text-align: center;\\r\\n  font-weight: 300;\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n.product p.name{\\r\\n   font-size: 18px;\\r\\n   text-align: center;\\r\\n   font-weight: 400;\\r\\n   margin-bottom: 8px;\\r\\n   min-height: 52px;\\r\\n }\\r\\n\\r\\n.product p.price{\\r\\n  font-size: 20px;\\r\\n  text-align: center;\\r\\n  font-weight: 700;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"product\\\">\\r\\n  <a routerLink=\\\"/product/{{product.name}}\\\"><img class=\\\"img-fluid d-block mx-auto\\\" src=\\\"{{product?.smallImageUrl}}\\\" alt=\\\"\\\"></a>\\r\\n  <a routerLink=\\\"/product/{{product.name}}\\\"><p class=\\\"brand\\\">{{product?.brand.name}}</p></a>\\r\\n  <a routerLink=\\\"/product/{{product.name}}\\\"><p class=\\\"name\\\">{{product?.name}}</p></a>\\r\\n  <p class=\\\"price\\\">{{product?.price}}€</p>\\r\\n  \\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Product } from 'src/app/models/product';\n\n@Component({\n  selector: 'product-item',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  @Input() product : Product;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","module.exports = \".content{\\r\\n  margin-top: 40px;\\r\\n  margin-bottom: 80px;\\r\\n}\\r\\n\\r\\nh1{\\r\\n    margin-bottom: 64px;\\r\\n}\\r\\n\\r\\n.carousel-control-prev-icon{\\r\\n    background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23333333' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E\\\") !important;\\r\\n}\\r\\n\\r\\n.carousel-control-next-icon{\\r\\n    background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23333333' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E\\\") !important;\\r\\n}\\r\\n\\r\\na.carousel-control-prev{\\r\\n    width: 60px;\\r\\n    height:60px;\\r\\n    display: block;\\r\\n    margin-top: auto;\\r\\n    margin-bottom: auto;\\r\\n }\\r\\n\\r\\na.carousel-control-next{\\r\\n    width: 60px;\\r\\n    height:60px;\\r\\n    display: block;\\r\\n    margin-top: auto;\\r\\n    margin-bottom: auto;\\r\\n}\"","module.exports = \"<div class=\\\"container content\\\">\\n  <h1 class=\\\"text-center\\\">{{carouselTitle}}</h1>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <div id=\\\"{{carouselHtmlId}}\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\" data-interval=\\\"0\\\">\\n\\n                              \\n              <div class=\\\"carousel-inner\\\">\\n\\n                  <div *ngFor = \\\"let productPage of productPages; let isFirstItem = first\\\" [ngClass] = \\\" isFirstItem ? 'carousel-item active' : 'carousel-item'\\\">\\n\\n                      <div class=\\\"row\\\">\\n\\n                          <div class=\\\"col-sm-6 col-md-6 col-lg-3\\\" *ngFor=\\\"let productItem of productPage.content\\\">\\n                              <product-item [product] = \\\"productItem\\\"></product-item>\\n                          </div>\\n\\n                      </div>\\n\\n                  </div>                         \\n\\n\\n              </div>\\n              \\n              <a class=\\\"carousel-control-prev\\\" href=\\\"#{{carouselHtmlId}}\\\" data-slide=\\\"prev\\\">\\n                  <span class=\\\"carousel-control-prev-icon\\\"></span>\\n              </a>\\n              <a class=\\\"carousel-control-next\\\" href=\\\"#{{carouselHtmlId}}\\\" data-slide=\\\"next\\\">\\n                  <span class=\\\"carousel-control-next-icon\\\"></span>\\n              </a>\\n          </div>\\n      </div>\\n  </div>\\n</div>  \\n\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { Product } from 'src/app/models/product';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductPage } from 'src/app/models/productPage';\r\n\r\n@Component({\r\n  selector: 'products-carousel',\r\n  templateUrl: './products-carousel.component.html',\r\n  styleUrls: ['./products-carousel.component.css']\r\n})\r\nexport class ProductsCarouselComponent implements OnInit, OnDestroy{\r\n\r\n  @Input() carouselTitle : string;\r\n  @Input() carouselHtmlId : string;\r\n  @Input() carouselType : string;\r\n  httpSubscription : Subscription;\r\n  httpSubscription2 : Subscription;\r\n\r\n  productPagesInformation : ProductPage;\r\n  productPages : ProductPage[];\r\n  pageNumber : number[];\r\n\r\n\r\n  constructor(private productService : ProductService) { }\r\n\r\n  ngOnInit() {\r\n    this.productPages = [];\r\n    this.pageNumber = [];\r\n\r\n    if(this.carouselType === 'favorite'){\r\n      this.addFavoriteProductsToCarousel();\r\n    }else if(this.carouselType === 'new'){\r\n      this.addNewProductsToCarousel();\r\n    }\r\n  }\r\n\r\n  addFavoriteProductsToCarousel() : void{\r\n    this.httpSubscription = this.productService.getFavoriteProductsInformation().subscribe(productPage => {\r\n      this.productPagesInformation = productPage;\r\n      this.initializePageNumber(this.productPagesInformation.totalPages);\r\n       this.httpSubscription2 = this.productService.getFavoriteProducts(this.pageNumber).subscribe(productPage => this.productPages.push(productPage));\r\n    });\r\n  }\r\n\r\n  addNewProductsToCarousel() : void{\r\n    this.httpSubscription = this.productService.getNewProductsInformation().subscribe(productPage => {\r\n      this.productPagesInformation = productPage;\r\n      this.initializePageNumber(this.productPagesInformation.totalPages);\r\n       this.httpSubscription2 = this.productService.getNewProducts(this.pageNumber).subscribe(productPage => this.productPages.push(productPage));\r\n    });\r\n  }\r\n\r\n  initializePageNumber(pages : number) : void{\r\n    for(let i=0; i< pages; i++)\r\n      this.pageNumber[i] = i;\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.httpSubscription !== undefined)this.httpSubscription.unsubscribe();\r\n    if(this.httpSubscription2 !== undefined)this.httpSubscription2.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"span.checked{\\r\\n    color: orange;\\r\\n}\"","module.exports = \"<input type=\\\"checkbox\\\" class=\\\"mr-2\\\">\\n<span *ngFor=\\\"let checkedStar of counter(checkedStars)\\\" class=\\\"fa fa-star checked\\\"></span>\\n<ng-container *ngIf=\\\"areThereUncheckedstars\\\">\\n    <span *ngFor=\\\"let uncheckedStar of counter(uncheckedStars)\\\" class=\\\"fa fa-star\\\"></span>\\n</ng-container>\\n<span class=\\\"ml-2\\\">(303)</span>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.css']\n})\nexport class RatingComponent implements OnInit {\n\n  totalStars : number;\n  checkedStars : number;\n  @Input() uncheckedStars : number;\n  areThereUncheckedstars : boolean;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.totalStars = 5;\n    this.checkedStars = this.totalStars - this.uncheckedStars\n    this.areThereUncheckedstars = this.uncheckedStars > 0 ;\n  }\n\n  counter( i : number){\n    return new Array(i);\n  } \n\n}\n","module.exports = \"/* --- Breadcrumbs --- */\\r\\n\\r\\n.breadcrumbs{\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 16px;\\r\\n}\\r\\n\\r\\n/* --- Register --- */\\r\\n\\r\\nsection.register{\\r\\n  padding-bottom: 32px;\\r\\n}\\r\\n\\r\\nsection.register h1{\\r\\n  text-align: center;\\r\\n  margin-bottom: 32px;\\r\\n}\\r\\n\\r\\nsection.register form h4{\\r\\n  margin-top:32px;\\r\\n  margin-bottom: 16px;\\r\\n}\\r\\n\\r\\nsection.register form .submit p{\\r\\n  display: inline;\\r\\n}\\r\\n\\r\\nsection.register form .form-group input{\\r\\n  background:\\t#E0E0E0;\\r\\n}\\r\\n\\r\\nsection.register form .submit{\\r\\n  text-align: center;\\r\\n  margin-top: 32px\\r\\n}\\r\\n\\r\\nsection.register form .submit button{\\r\\npadding-left: 24px;\\r\\npadding-right: 24px;\\r\\n}\"","module.exports = \"<navigation-bar></navigation-bar>\\r\\n\\r\\n<!-- Breadcrumbs -->\\r\\n<div class=\\\"breadcrumbs\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n            <a routerLink=\\\"/\\\"><i class=\\\"fas fa-home mr-1\\\"></i></a>/\\r\\n            Εγγραφή\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Register -->\\r\\n<section class=\\\"register\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <h1>Εγγραφή</h1>\\r\\n        <p>Εάν έχετε ήδη λογαριασμό, μπορείτε να εισέλθετε <a routerLink=\\\"/login\\\">εδώ</a>.</p>\\r\\n           \\r\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n            <h4>Προσωπικά στοιχεία</h4>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Username</label>\\r\\n                <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.username\\\" #username=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && (username.invalid || usernameError)}\\\" required minlength=\\\"2\\\">\\r\\n                <div *ngIf=\\\"f.submitted && username.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"username.errors.required\\\">Πρέπει να συμπληρώσετε το Username</div>\\r\\n                    <div *ngIf=\\\"username.errors.minlength\\\">Το Username πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"usernameError\\\" class=\\\"invalid-feedback\\\">Το username υπάρχει ήδη</div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Όνομα</label>\\r\\n                <input type=\\\"text\\\" name=\\\"firstname\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.first_name\\\" #firstname=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && firstname.invalid}\\\" required minlength=\\\"2\\\">\\r\\n                <div *ngIf=\\\"f.submitted && firstname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"firstname.errors.required\\\">Πρέπει να συμπληρώσετε το όνομα</div>\\r\\n                    <div *ngIf=\\\"firstname.errors.minlength\\\">Το όνομα πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Επώνυμο</label>\\r\\n                <input type=\\\"text\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.last_name\\\" #lastname=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && lastname.invalid}\\\" required minlength=\\\"2\\\">\\r\\n                <div *ngIf=\\\"f.submitted && lastname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"lastname.errors.required\\\">Πρέπει να συμπληρώσετε το επίθετο</div>\\r\\n                    <div *ngIf=\\\"lastname.errors.minlength\\\">Το επίθετο πρέπει να έχει μήκος τουλάχιστον δύο χαρακτήρες</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>E-mail</label>\\r\\n                <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted &&  (email.invalid || emailError)}\\\" required email>\\r\\n                <div *ngIf=\\\"f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"email.errors.required\\\">Πρέπει να συμπληρώσετε το email</div>\\r\\n                    <div *ngIf=\\\"email.errors.email\\\">Το email πρέπει να έχει τη σωστή μορφή</div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"emailError\\\" class=\\\"invalid-feedback\\\">Το email υπάρχει ήδη</div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Τηλέφωνο</label>\\r\\n                <input type=\\\"number\\\"  name=\\\"phone\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.phone\\\" #phone=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && phone.invalid}\\\" required tel>\\r\\n                <div *ngIf=\\\"f.submitted && phone.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"phone.errors.required\\\">Πρέπει να συμπληρώσετε το τηλέφωνο</div>\\r\\n                    <div *ngIf=\\\"phone.errors.phone\\\">Το τηλέφωνο πρέπει να έχει τη σωστή μορφή</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <h4>Ο Κωδικός</h4>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Kωδικός</label>\\r\\n                <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && password.invalid}\\\" required minlength=\\\"6\\\">\\r\\n                <div *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"password.errors.required\\\">Πρέπει να πληκτρολογήσετε έναν κωδικό</div>\\r\\n                    <div *ngIf=\\\"password.errors.minlength\\\">Ο κωδικός πρέπει να έχει μήκος τουλάχιστον 6 χαρακτήρες</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Επαλήθευση Κωδικού</label>\\r\\n                <input type=\\\"password\\\" name=\\\"confirmpassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.confirm_password\\\" #confirmpassword=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid' : f.submitted && !arePasswordsFieldsTheSame()}\\\">\\r\\n                <div *ngIf=\\\"f.submitted && !arePasswordsFieldsTheSame()\\\" class=\\\"invalid-feedback\\\">Οι κωδικοί δεν είναι ίδιοι</div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"submit\\\">\\r\\n                <button class=\\\"btn btn-primary\\\">Εγγραφή</button>\\r\\n            </div>\\r\\n\\r\\n           </form>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<my-footer></my-footer>\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { RegisterService } from 'src/app/services/register.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { Subscription } from 'rxjs';\r\nimport { ErrorMessage } from 'src/app/models/errorMessage';\r\nimport {Router} from \"@angular/router\"\r\n\r\n@Component({\r\n  selector: 'register-page',\r\n  templateUrl: './register-page.component.html',\r\n  styleUrls: ['./register-page.component.css']\r\n})\r\nexport class RegisterPageComponent implements OnInit, OnDestroy {\r\n\r\n  user : User;\r\n  errorMessage : ErrorMessage;\r\n  usernameError : boolean = false;\r\n  emailError : boolean = false;\r\n  httpSubscription : Subscription;\r\n\r\n  constructor(private registerService : RegisterService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.user = {} as User;\r\n    this.errorMessage = {} as ErrorMessage;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.httpSubscription = this.registerService.registerUser(this.user).subscribe(\r\n      user => this.router.navigate(['/login'], {queryParams : { redirect : 'register'}}), \r\n\r\n      errorResponse => {\r\n      this.setProperFieldError(errorResponse.error.errorMessage);\r\n      });\r\n  }\r\n\r\n  setProperFieldError(message : string) : void{\r\n    if(message.includes('username')){\r\n      this.usernameError = true;\r\n      this.emailError = false;\r\n    }else if(message.includes('email')){\r\n      this.usernameError = false;\r\n      this.emailError = true;\r\n    }\r\n  }\r\n\r\n  arePasswordsFieldsTheSame() : boolean{\r\n    return this.user.password === this.user.confirm_password;\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.httpSubscription !== undefined)this.httpSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"/* --- Services --- */\\r\\nsection.services{\\r\\n    background-color: #04BF00;\\r\\n    color:#fff;\\r\\n    text-align: center;\\r\\n    padding-top: 64px;\\r\\n    padding-bottom: 64px;\\r\\n  }\\r\\nsection.services h3{\\r\\n    font-size: 18px;\\r\\n    text-align: left;\\r\\n  }\\r\\nsection.services p{\\r\\n    font-size: 16px;\\r\\n    text-align: left;\\r\\n    margin-top: 16px;\\r\\n    margin-bottom: 16px;\\r\\n  }\\r\\n@media (max-width: 768px){\\r\\n    section.services p:nth-child(2){\\r\\n      margin-top: 24px;\\r\\n      margin-bottom: 24px;\\r\\n    }\\r\\n  }\"","module.exports = \"<!-- Services -->\\n<section  class=\\\"services\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4\\\">\\n              <h3><i class=\\\"fas fa-truck fa-lg mr-3\\\"></i>ΓΡΗΓΟΡΗ ΚΑΙ ΔΩΡΕΑΝ ΔΙΑΝΟΜΗ</h3>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n              <h3><i class=\\\"fas fa-lock fa-lg mr-3\\\"></i> ΑΣΦΑΛΕΙΣ ΠΛΗΡΩΜΕΣ</h3>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n              <h3><i class=\\\"far fa-credit-card fa-lg mr-3\\\"></i>ΕΓΓΥΗΣΗ ΕΠΙΣΤΡΟΦΗΣ ΧΡΗΜΑΤΩΝ</h3>\\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\\n          </div>\\n      </div>\\n  </div>  \\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'shop-services',\n  templateUrl: './shop-services.component.html',\n  styleUrls: ['./shop-services.component.css']\n})\nexport class ShopServicesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, empty} from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { CartService } from '../services/cart.service';\r\n\r\n@Injectable()\r\nexport class AuthenticationStatusChangeInterceptor  implements  HttpInterceptor{\r\n\r\n    constructor(private authenticationService : AuthenticationService, private cartService : CartService, private cookieService : CookieService, private router : Router){}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler) :  Observable<HttpEvent<any>>{\r\n\r\n        let isUserCurrentlyAuthenticated = this.authenticationService.isAuthenticated;\r\n        let isAuthenticatedCookieDeletedOrNo = this.cookieService.get('IS_AUTHENTICATED') === 'no' || !this.cookieService.check('IS_AUTHENTICATED');\r\n        let wasLocalStorageDeleted = localStorage.length === 0;\r\n\r\n       return  this.handleReqeuestsWhereAuthenticationStatusChanged(isUserCurrentlyAuthenticated, isAuthenticatedCookieDeletedOrNo, \r\n        wasLocalStorageDeleted, request, next);\r\n    }\r\n\r\n\r\n\r\n    handleReqeuestsWhereAuthenticationStatusChanged(isUserCurrentlyAuthenticated : boolean, isAuthenticatedCookieDeletedOrNo : boolean, \r\n        wasLocalStorageDeleted : boolean, request: HttpRequest<any>, next: HttpHandler) {\r\n\r\n            if(isUserCurrentlyAuthenticated && isAuthenticatedCookieDeletedOrNo){\r\n                this.authenticationService.isAuthenticated = false;\r\n                if(!wasLocalStorageDeleted) localStorage.clear();\r\n                this.cartService.createAnonymousUserCart();\r\n                this.authenticationService.getAnonymousSession();\r\n                this.navigateToIndexPage();\r\n                return empty();\r\n            }\r\n\r\n            return next.handle(request);\r\n    }\r\n\r\n    navigateToIndexPage() : void{\r\n        if(this.router.url === '/'){\r\n          window.location.reload();\r\n        }else{\r\n          this.router.navigate(['']);\r\n        }    \r\n    }\r\n\r\n}","import { Brand } from \"./brand\";\r\nimport { Category } from \"./category\";\r\n\r\nexport class Product{\r\n    id : number\r\n    name : string\r\n    brand : Brand\r\n    category : Category\r\n    price : number\r\n    quantity : number\r\n    description : string\r\n    is_new : boolean\r\n    is_favorite : boolean\r\n    smallImageUrl : string\r\n    largeImageUrl : string\r\n    verySmallImageUrl : string\r\n}","import { Injectable } from '@angular/core';\r\nimport { Session } from '../models/session';\r\nimport { UserCredentials } from '../models/userCredentials';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { User } from '../models/user';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Router, NavigationStart, NavigationEnd } from '@angular/router';\r\nimport { CartService } from './cart.service';\r\nimport { CartProduct } from '../models/cartProduct';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  public isAuthenticated : boolean = false;\r\n  private wasServiceJustInitialized = false;\r\n\r\n  private validateUserApiEndpoint =  '/authentication/validateuser';\r\n  private sessionApiEndpoint =  '/authentication/session';\r\n  private logoutApiEndpoint = '/authentication/logout';\r\n  private anonymousApiEndpoint = '/anonymous/session';\r\n\r\n  constructor(private http : HttpClient, private cookieService :  CookieService, private cartService : CartService ,private router : Router) {\r\n    this.checkIfUserLoggedInPreviously();\r\n  }\r\n\r\n  async checkIfUserLoggedInPreviously(){\r\n    this.wasServiceJustInitialized = true;\r\n    let isAuthenticatedCookieDeletedOrNo = this.cookieService.get('IS_AUTHENTICATED') === 'no' || !this.cookieService.check('IS_AUTHENTICATED');\r\n    let wasLocalStorageDeleted = localStorage.length === 0;\r\n\r\n    if(isAuthenticatedCookieDeletedOrNo){\r\n      this.isAuthenticated = false;\r\n      if(!wasLocalStorageDeleted && !this.cartService.doesAnonymousUserCartExist) localStorage.clear();\r\n      this.navigateToIndexPage();\r\n    }else{\r\n      this.isAuthenticated = true;\r\n    }\r\n\r\n    this.wasServiceJustInitialized = false;\r\n  }\r\n\r\n  async login(credentials : UserCredentials) : Promise<string>{\r\n    let message : string = '';\r\n\r\n    await this.http.post<User>(this.validateUserApiEndpoint, credentials).toPromise()\r\n                             .then(async user => {\r\n                                let headers = new HttpHeaders();\r\n                                headers = headers.append('Authorization', 'Basic ' + btoa(user.username + ':' + credentials.password));\r\n\r\n                                await this.http.get<Session>(this.sessionApiEndpoint, {headers : headers}).toPromise()\r\n                                    .then(async session => {\r\n                                      message = \"Επιτυχημένη είσοδος χρήστη\";\r\n                                      this.writeSessionToLocalStorage(session);\r\n                                      this.isAuthenticated = true;\r\n\r\n                                      if(this.cartService.doesAnonymousUserCartExist() && this.cartService.getAnonymousUserCartCount() > 0){\r\n                                        await this.cartService.deleteUserCart(Number(session.userid)).toPromise()\r\n                                                  .then(async response => {\r\n                                                    let cartProducts = this.cartService.getAnonymousUserCart();\r\n                                                    this.addUserToCartProducts(cartProducts, Number(session.userid));\r\n                                                    await this.cartService.addMultipleProductsTocart(cartProducts).toPromise()\r\n                                                              .then(response => console.log('products added successfuly'))\r\n                                                              .catch(errorResponse => console.log(errorResponse));\r\n\r\n                                                  })\r\n                                                  .catch(async errorResponse => {\r\n                                                    if(errorResponse.status === 400){\r\n                                                      let cartProducts = this.cartService.getAnonymousUserCart();\r\n                                                      this.addUserToCartProducts(cartProducts, Number(session.userid));\r\n                                                      await this.cartService.addMultipleProductsTocart(cartProducts).toPromise()\r\n                                                              .then(response => console.log('products added successfuly'))\r\n                                                              .catch(errorResponse => console.log(errorResponse));\r\n                                                    }\r\n                                                  });\r\n                                      }\r\n                                    })\r\n\r\n                                    .catch(errorResponse => {\r\n                                      message = \"Κάτι πήγε στραβά\";\r\n                                      this.isAuthenticated = false;\r\n                                    });\r\n                              })\r\n\r\n                             .catch(errorResponse => {\r\n                                message =  errorResponse.error.errorMessage;\r\n                                this.isAuthenticated = false;\r\n                             });\r\n\r\n    return message;\r\n  }\r\n  \r\n  addUserToCartProducts(cartProducts : CartProduct[], userid : number) : void{\r\n    cartProducts.forEach(cartProduct => cartProduct.userid = userid);\r\n  }\r\n\r\n  writeSessionToLocalStorage(session : Session) : void{\r\n    localStorage.setItem(\"session_id\", session.id);\r\n    localStorage.setItem(\"user\", session.username);\r\n    localStorage.setItem(\"userid\", session.userid);\r\n    localStorage.setItem(\"type\", session.type);\r\n  }\r\n\r\n  getSessionDataAgain() : Promise<void>{\r\n    return this.http.get<Session>(this.sessionApiEndpoint).toPromise().then( session => this.writeSessionToLocalStorage(session))\r\n                                                               .catch(errorResponse => console.log(errorResponse));\r\n  }\r\n\r\n  getAnonymousSession() : Promise<void>{\r\n    return this.http.get<Session>(this.anonymousApiEndpoint).toPromise().then( session => console.log(session))\r\n                                                                .catch(errorResponse => console.log(errorResponse));\r\n  }\r\n\r\n  logout(){\r\n    return this.http.post(this.logoutApiEndpoint, {}).toPromise()\r\n                                                    .then(response => {\r\n                                                      this.isAuthenticated = false;\r\n                                                      this.getAnonymousSession();\r\n                                                      if(localStorage.length > 0) localStorage.clear();\r\n                                                      this.cartService.createAnonymousUserCart();\r\n                                                      this.navigateToIndexPage();\r\n                                                    })\r\n                                                    .catch();\r\n  }\r\n\r\n  navigateToIndexPage(): void{\r\n    if(this.router.url === '/' && !this.wasServiceJustInitialized){\r\n      window.location.reload(); // User logins correctly, navigates to index and logouts from index\r\n    }else if(this.router.url === '/' && this.wasServiceJustInitialized){\r\n      // User logins correctly, deletes session cookie and request localhost:8080 again\r\n    }else{\r\n      this.router.navigate(['']);\r\n    }\r\n    \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, from } from 'rxjs';\r\nimport { mergeMap} from 'rxjs/operators';\r\nimport { CartProduct } from '../models/cartProduct';\r\nimport { CartProductCount } from '../models/cartProductCount';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n  private cartApiEndpoint = '/api/carts';\r\n  private productsPath = '/products';\r\n  private countPath = '/count';\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  getCartProducts(userId : string) : Observable<CartProduct[]>{\r\n    return this.http.get<CartProduct[]>(this.cartApiEndpoint + '/' + userId);\r\n  }\r\n\r\n  deleteUserCart(userId : number) : Observable<any>{\r\n    return this.http.delete(this.cartApiEndpoint + '/' + userId);\r\n  }\r\n\r\n  getCartProductsCount(userId : string) : Observable<CartProductCount>{\r\n    return this.http.get<CartProductCount>(this.cartApiEndpoint + '/' + userId + this.countPath);\r\n  }\r\n\r\n  addProductTocart(userId : number, productId : number, quantity : number) : Observable<CartProduct>{\r\n    let cartProduct = {} as CartProduct;\r\n    cartProduct.userid = userId;\r\n    cartProduct.productid = productId;\r\n    cartProduct.quantity = quantity;\r\n    return this.http.post<CartProduct>(this.cartApiEndpoint, cartProduct);\r\n  }\r\n\r\n  addMultipleProductsTocart(cartProducts : CartProduct[]) : Observable<CartProduct>{\r\n    return from(cartProducts).pipe(mergeMap(cartProduct => <Observable<CartProduct>> this.http.post<CartProduct>(this.cartApiEndpoint, cartProduct)));\r\n  }\r\n\r\n  getCartProduct(userId : number, productId : number) : Observable<CartProduct>{\r\n    return this.http.get<CartProduct>(this.cartApiEndpoint + '/' + userId + this.productsPath + '/' + productId);\r\n  }\r\n\r\n  deleteCartProduct(userId : number, productId : number) : Observable<any>{\r\n    return this.http.delete(this.cartApiEndpoint + '/' + userId + this.productsPath + '/' + productId);\r\n  }\r\n\r\n  updateCartProduct(cartProduct : CartProduct) : Observable<any>{\r\n    return this.http.patch(this.cartApiEndpoint + '/' + cartProduct.userid + this.productsPath + '/' + cartProduct.productid, cartProduct);\r\n  }\r\n\r\n  //Anonymous\r\n\r\n  createAnonymousUserCart() : void{\r\n    if(!this.doesAnonymousUserCartExist()){\r\n      let cart : CartProduct[] = [];\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n  }\r\n\r\n  updateAnonymousUserCart(cart : CartProduct[]) : void{\r\n    if(this.doesAnonymousUserCartExist()){\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n  }\r\n\r\n  getAnonymousUserCart() : CartProduct[]{\r\n    let cart = JSON.parse(localStorage.getItem('cart')) as CartProduct[];\r\n    return cart;\r\n  }\r\n\r\n  doesAnonymousUserCartExist() : boolean{\r\n    return localStorage.getItem('cart') !== null;\r\n  }\r\n\r\n  getAnonymousUserCartCount() : number{\r\n    let count = 0;\r\n    if(!this.doesAnonymousUserCartExist) \r\n       return count;\r\n\r\n    this.getAnonymousUserCart().forEach(cartProduct => count += cartProduct.quantity);\r\n    return count;\r\n  }\r\n\r\n  getAnonymousUserCartProduct(cart : CartProduct[], productid : number) : CartProduct{\r\n    let index = cart.findIndex(x => x.productid === productid);\r\n    return cart[index];\r\n  }\r\n\r\n  doesAnonymousUserCartContaintProduct(productid : number) : boolean{\r\n    let cart = this.getAnonymousUserCart();\r\n    return cart.find(x => x.productid === productid) !== undefined;\r\n  }\r\n\r\n  addProductToAnonymousUserCart(cartProduct : CartProduct){\r\n\r\n    if(!this.doesAnonymousUserCartExist())\r\n       this.createAnonymousUserCart();\r\n\r\n    let cart = this.getAnonymousUserCart();\r\n    if(this.doesAnonymousUserCartContaintProduct(cartProduct.productid)){\r\n      let existingProduct = this.getAnonymousUserCartProduct(cart, cartProduct.productid);\r\n      existingProduct.quantity += cartProduct.quantity;\r\n    }else{\r\n      cart.push(cartProduct);\r\n    }\r\n\r\n    this.updateAnonymousUserCart(cart);\r\n  }\r\n\r\n  updateUserCartProduct(cartProduct : CartProduct){\r\n    let cart = this.getAnonymousUserCart();\r\n    let existingProduct = this.getAnonymousUserCartProduct(cart, cartProduct.productid);\r\n    existingProduct.quantity = cartProduct.quantity;\r\n    this.updateAnonymousUserCart(cart);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, from } from 'rxjs';\r\nimport { PriceRange } from '../models/priceRange';\r\nimport { Brand } from '../models/brand';\r\nimport { mergeMap, concatMap } from 'rxjs/operators';\r\nimport { ProductsPerBrand } from '../models/productsPerBrand';\r\nimport { ProductsPerPriceRange } from '../models/productsPerPriceRange';\r\nimport { ProductPage } from '../models/productPage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  private categoryProductsApi = '/api/categories/';\r\n  private categoryBrands = \"/api/brands\";\r\n  private countPath = \"/count\";\r\n  private categoryParameter = \"?category=\";\r\n  private brandParameter = \"?brand=\";\r\n  private brandParameterAnd = '&brand=';\r\n  private rangeParameter = \"?range=\";\r\n  private rangeParameterAnd = \"&range=\";\r\n  private pageParameter = \"?page=\";\r\n  private orderParameter = \"&order=\";\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  getCategoryProductsPage(category : string, page : number, order : string, brandParameters : string[], rangeParameters : string[]) : Observable<ProductPage>{\r\n\r\n    if(brandParameters.length === 0 && rangeParameters.length === 0){\r\n      return this.http.get<ProductPage>(this.categoryProductsApi + category + this.pageParameter + page + this.orderParameter + order);\r\n    }else{\r\n      let paramString = '';\r\n\r\n      if(brandParameters.length > 0){\r\n        brandParameters.forEach(brand => paramString = paramString + this.brandParameterAnd + brand);\r\n      }\r\n\r\n      if(rangeParameters.length > 0){\r\n        rangeParameters.forEach(range => paramString = paramString + this.rangeParameterAnd + range);\r\n      }\r\n      \r\n      return this.http.get<ProductPage>(this.categoryProductsApi + category + this.pageParameter + page + this.orderParameter + order + paramString);\r\n    }\r\n    \r\n  }\r\n\r\n  getCategoryBrands(category : string) : Observable<Brand[]>{\r\n    return this.http.get<Brand[]>(this.categoryBrands + this.categoryParameter +  category);\r\n  }\r\n\r\n  getCategoryProductsNumberByBrand(category : string, brands : Brand[]) : Observable<ProductsPerBrand>{\r\n    return from(brands).pipe(mergeMap(brand => <Observable<ProductsPerBrand>> this.http.get<ProductsPerBrand>(this.categoryProductsApi + category + this.countPath + this.brandParameter + brand.name)));\r\n  }\r\n\r\n  getCategoryProductsNumberByPriceRange(category : string, priceRanges : PriceRange[]) : Observable<ProductsPerPriceRange>{\r\n    return from(priceRanges).pipe(concatMap(range => <Observable<ProductsPerPriceRange>> this.http.get<ProductsPerPriceRange>(this.categoryProductsApi + category + this.countPath + this.rangeParameter + range.id)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Order } from '../models/order';\r\nimport { OrderDetails } from '../models/orderDetails';\r\nimport { Observable } from 'rxjs';\r\nimport { CartProduct } from '../models/cartProduct';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CheckoutService {\r\n\r\n  private orderApiEndpoint = '/api/orders';\r\n  public order = {} as Order;\r\n  public orderProducts : CartProduct[] = [] ;\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  addOrder(orderDetails : OrderDetails) : Observable<Order>{\r\n    return this.http.post<Order>(this.orderApiEndpoint, orderDetails);\r\n  }\r\n\r\n  getCurrentOrder() : Order{\r\n    return this.order;\r\n  }\r\n\r\n  setCurrentOrder(order : Order) : void{\r\n    this.order = order;\r\n  }\r\n\r\n  getOrderProducts() : CartProduct[]{\r\n    return this.orderProducts;\r\n  }\r\n\r\n  setOrderProducts(orderProducts : CartProduct[]) : void{\r\n    this.orderProducts = orderProducts;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport {Deal} from '../models/deal';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DealService {\n\n  private dealsApi = '/api/deals';\n\n  constructor(private http : HttpClient ) { }\n\n  getDeals() : Observable<Deal[]>{\n    return this.http.get<Deal[]>(this.dealsApi);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, from } from 'rxjs';\nimport { Product } from '../models/product';\nimport { ProductPage } from '../models/productPage';\nimport { mergeMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private productListsApi = '/api/products';\n  private favoriteParam = '?filter=favorite';\n  private newParam = '?filter=new';\n  private pageParam = '&page=';\n\n  constructor(private http : HttpClient) { }\n\n  getFavoriteProductsInformation() : Observable<ProductPage>{\n    return this.http.get<ProductPage>(this.productListsApi + this.favoriteParam + this.pageParam + '0');\n  }\n\n  getNewProductsInformation() : Observable<ProductPage>{\n    return this.http.get<ProductPage>(this.productListsApi + this.newParam + this.pageParam + '0');\n  }\n\n  getFavoriteProducts(pages : number[]) : Observable<ProductPage>{\n    return from(pages).pipe(mergeMap(page => <Observable<ProductPage>> this.http.get<ProductPage>(this.productListsApi + this.favoriteParam + this.pageParam + page)));\n  }\n\n  getNewProducts(pages : number[]) : Observable<ProductPage>{\n    return from(pages).pipe(mergeMap(page => <Observable<ProductPage>> this.http.get<ProductPage>(this.productListsApi + this.newParam + this.pageParam + page)));\n  }\n\n  getSingleProduct(name : string) : Observable<Product>{\n    return this.http.get<Product>(this.productListsApi + '/' + name);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, from } from 'rxjs';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  private registerApiEndpoint = '/api/register';\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  registerUser(user : User) : Observable<User>{\r\n    return this.http.post<User>(this.registerApiEndpoint, user);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}